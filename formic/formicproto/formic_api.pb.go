// Code generated by protoc-gen-go.
// source: formic_api.proto
// DO NOT EDIT!

/*
Package formicproto is a generated protocol buffer package.

It is generated from these files:
	formic_api.proto

It has these top-level messages:
	Attr
	InodeEntry
	Tombstone
	Dirty
	FileBlock
	GrantAddrFSRequest
	GrantAddrFSResponse
	RevokeAddrFSRequest
	RevokeAddrFSResponse
	DirEntry
*/
package formicproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Attr
type Attr struct {
	Inode  uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Atime  int64  `protobuf:"varint,2,opt,name=atime" json:"atime,omitempty"`
	Mtime  int64  `protobuf:"varint,3,opt,name=mtime" json:"mtime,omitempty"`
	Ctime  int64  `protobuf:"varint,4,opt,name=ctime" json:"ctime,omitempty"`
	Crtime int64  `protobuf:"varint,5,opt,name=crtime" json:"crtime,omitempty"`
	Mode   uint32 `protobuf:"varint,6,opt,name=mode" json:"mode,omitempty"`
	Valid  int32  `protobuf:"varint,7,opt,name=valid" json:"valid,omitempty"`
	Size   uint64 `protobuf:"varint,8,opt,name=size" json:"size,omitempty"`
	Uid    uint32 `protobuf:"varint,9,opt,name=uid" json:"uid,omitempty"`
	Gid    uint32 `protobuf:"varint,10,opt,name=gid" json:"gid,omitempty"`
}

func (m *Attr) Reset()                    { *m = Attr{} }
func (m *Attr) String() string            { return proto.CompactTextString(m) }
func (*Attr) ProtoMessage()               {}
func (*Attr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Attr) GetInode() uint64 {
	if m != nil {
		return m.Inode
	}
	return 0
}

func (m *Attr) GetAtime() int64 {
	if m != nil {
		return m.Atime
	}
	return 0
}

func (m *Attr) GetMtime() int64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *Attr) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *Attr) GetCrtime() int64 {
	if m != nil {
		return m.Crtime
	}
	return 0
}

func (m *Attr) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *Attr) GetValid() int32 {
	if m != nil {
		return m.Valid
	}
	return 0
}

func (m *Attr) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Attr) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Attr) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

// Inode
// This is used for serialization of the inode metadata
// This is *not* used for api calls
type InodeEntry struct {
	Version   uint32            `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	IsDir     bool              `protobuf:"varint,2,opt,name=isDir" json:"isDir,omitempty"`
	Attr      *Attr             `protobuf:"bytes,3,opt,name=attr" json:"attr,omitempty"`
	Parent    uint64            `protobuf:"varint,4,opt,name=parent" json:"parent,omitempty"`
	Inode     uint64            `protobuf:"varint,5,opt,name=inode" json:"inode,omitempty"`
	NodeCount uint64            `protobuf:"varint,6,opt,name=nodeCount" json:"nodeCount,omitempty"`
	IsLink    bool              `protobuf:"varint,7,opt,name=isLink" json:"isLink,omitempty"`
	Target    string            `protobuf:"bytes,8,opt,name=target" json:"target,omitempty"`
	Xattr     map[string][]byte `protobuf:"bytes,9,rep,name=xattr" json:"xattr,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Blocks    uint64            `protobuf:"varint,10,opt,name=blocks" json:"blocks,omitempty"`
	BlockSize uint64            `protobuf:"varint,11,opt,name=blockSize" json:"blockSize,omitempty"`
	FsId      []byte            `protobuf:"bytes,13,opt,name=fsId,proto3" json:"fsId,omitempty"`
}

func (m *InodeEntry) Reset()                    { *m = InodeEntry{} }
func (m *InodeEntry) String() string            { return proto.CompactTextString(m) }
func (*InodeEntry) ProtoMessage()               {}
func (*InodeEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InodeEntry) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *InodeEntry) GetIsDir() bool {
	if m != nil {
		return m.IsDir
	}
	return false
}

func (m *InodeEntry) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

func (m *InodeEntry) GetParent() uint64 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *InodeEntry) GetInode() uint64 {
	if m != nil {
		return m.Inode
	}
	return 0
}

func (m *InodeEntry) GetNodeCount() uint64 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *InodeEntry) GetIsLink() bool {
	if m != nil {
		return m.IsLink
	}
	return false
}

func (m *InodeEntry) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *InodeEntry) GetXattr() map[string][]byte {
	if m != nil {
		return m.Xattr
	}
	return nil
}

func (m *InodeEntry) GetBlocks() uint64 {
	if m != nil {
		return m.Blocks
	}
	return 0
}

func (m *InodeEntry) GetBlockSize() uint64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *InodeEntry) GetFsId() []byte {
	if m != nil {
		return m.FsId
	}
	return nil
}

// Tombstone
// Stores information needed to keep track of deleted items
type Tombstone struct {
	Dtime  int64  `protobuf:"varint,1,opt,name=dtime" json:"dtime,omitempty"`
	Qtime  int64  `protobuf:"varint,2,opt,name=qtime" json:"qtime,omitempty"`
	FsId   []byte `protobuf:"bytes,3,opt,name=fsId,proto3" json:"fsId,omitempty"`
	Inode  uint64 `protobuf:"varint,4,opt,name=inode" json:"inode,omitempty"`
	Blocks uint64 `protobuf:"varint,5,opt,name=blocks" json:"blocks,omitempty"`
}

func (m *Tombstone) Reset()                    { *m = Tombstone{} }
func (m *Tombstone) String() string            { return proto.CompactTextString(m) }
func (*Tombstone) ProtoMessage()               {}
func (*Tombstone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Tombstone) GetDtime() int64 {
	if m != nil {
		return m.Dtime
	}
	return 0
}

func (m *Tombstone) GetQtime() int64 {
	if m != nil {
		return m.Qtime
	}
	return 0
}

func (m *Tombstone) GetFsId() []byte {
	if m != nil {
		return m.FsId
	}
	return nil
}

func (m *Tombstone) GetInode() uint64 {
	if m != nil {
		return m.Inode
	}
	return 0
}

func (m *Tombstone) GetBlocks() uint64 {
	if m != nil {
		return m.Blocks
	}
	return 0
}

// Dirty
// Stores information needed to keep track of dirty items
type Dirty struct {
	Dtime  int64  `protobuf:"varint,1,opt,name=dtime" json:"dtime,omitempty"`
	Qtime  int64  `protobuf:"varint,2,opt,name=qtime" json:"qtime,omitempty"`
	FsId   []byte `protobuf:"bytes,3,opt,name=fsId,proto3" json:"fsId,omitempty"`
	Inode  uint64 `protobuf:"varint,4,opt,name=inode" json:"inode,omitempty"`
	Blocks uint64 `protobuf:"varint,5,opt,name=blocks" json:"blocks,omitempty"`
}

func (m *Dirty) Reset()                    { *m = Dirty{} }
func (m *Dirty) String() string            { return proto.CompactTextString(m) }
func (*Dirty) ProtoMessage()               {}
func (*Dirty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Dirty) GetDtime() int64 {
	if m != nil {
		return m.Dtime
	}
	return 0
}

func (m *Dirty) GetQtime() int64 {
	if m != nil {
		return m.Qtime
	}
	return 0
}

func (m *Dirty) GetFsId() []byte {
	if m != nil {
		return m.FsId
	}
	return nil
}

func (m *Dirty) GetInode() uint64 {
	if m != nil {
		return m.Inode
	}
	return 0
}

func (m *Dirty) GetBlocks() uint64 {
	if m != nil {
		return m.Blocks
	}
	return 0
}

// FileBlock
// This is used for storing blocks in value store
// This is *not* used for api calls
type FileBlock struct {
	Version  uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Checksum uint32 `protobuf:"varint,3,opt,name=checksum" json:"checksum,omitempty"`
}

func (m *FileBlock) Reset()                    { *m = FileBlock{} }
func (m *FileBlock) String() string            { return proto.CompactTextString(m) }
func (*FileBlock) ProtoMessage()               {}
func (*FileBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *FileBlock) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *FileBlock) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FileBlock) GetChecksum() uint32 {
	if m != nil {
		return m.Checksum
	}
	return 0
}

// Request grant an ip address access to a file system
type GrantAddrFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	FSid  string `protobuf:"bytes,2,opt,name=FSid" json:"FSid,omitempty"`
	Addr  string `protobuf:"bytes,3,opt,name=Addr" json:"Addr,omitempty"`
}

func (m *GrantAddrFSRequest) Reset()                    { *m = GrantAddrFSRequest{} }
func (m *GrantAddrFSRequest) String() string            { return proto.CompactTextString(m) }
func (*GrantAddrFSRequest) ProtoMessage()               {}
func (*GrantAddrFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GrantAddrFSRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GrantAddrFSRequest) GetFSid() string {
	if m != nil {
		return m.FSid
	}
	return ""
}

func (m *GrantAddrFSRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

// Response from granting ip address access to a file system
type GrantAddrFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
}

func (m *GrantAddrFSResponse) Reset()                    { *m = GrantAddrFSResponse{} }
func (m *GrantAddrFSResponse) String() string            { return proto.CompactTextString(m) }
func (*GrantAddrFSResponse) ProtoMessage()               {}
func (*GrantAddrFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GrantAddrFSResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// Request revoke an ip address access to a file system
type RevokeAddrFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	FSid  string `protobuf:"bytes,2,opt,name=FSid" json:"FSid,omitempty"`
	Addr  string `protobuf:"bytes,3,opt,name=Addr" json:"Addr,omitempty"`
}

func (m *RevokeAddrFSRequest) Reset()                    { *m = RevokeAddrFSRequest{} }
func (m *RevokeAddrFSRequest) String() string            { return proto.CompactTextString(m) }
func (*RevokeAddrFSRequest) ProtoMessage()               {}
func (*RevokeAddrFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RevokeAddrFSRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RevokeAddrFSRequest) GetFSid() string {
	if m != nil {
		return m.FSid
	}
	return ""
}

func (m *RevokeAddrFSRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

// Response from revoking ip address access to a file system
type RevokeAddrFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data" json:"Data,omitempty"`
}

func (m *RevokeAddrFSResponse) Reset()                    { *m = RevokeAddrFSResponse{} }
func (m *RevokeAddrFSResponse) String() string            { return proto.CompactTextString(m) }
func (*RevokeAddrFSResponse) ProtoMessage()               {}
func (*RevokeAddrFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RevokeAddrFSResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// TODO: Needed for now since this is used when storing in the stores.
// This really shouldn't be in this proto package.
// This is used for the serialization of dir info in the group score
// This is *not* used for api calls
type DirEntry struct {
	Version   uint32     `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Name      string     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Id        []byte     `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Tombstone *Tombstone `protobuf:"bytes,4,opt,name=tombstone" json:"tombstone,omitempty"`
	Type      uint32     `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
}

func (m *DirEntry) Reset()                    { *m = DirEntry{} }
func (m *DirEntry) String() string            { return proto.CompactTextString(m) }
func (*DirEntry) ProtoMessage()               {}
func (*DirEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DirEntry) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *DirEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DirEntry) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DirEntry) GetTombstone() *Tombstone {
	if m != nil {
		return m.Tombstone
	}
	return nil
}

func (m *DirEntry) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func init() {
	proto.RegisterType((*Attr)(nil), "formicproto.Attr")
	proto.RegisterType((*InodeEntry)(nil), "formicproto.InodeEntry")
	proto.RegisterType((*Tombstone)(nil), "formicproto.Tombstone")
	proto.RegisterType((*Dirty)(nil), "formicproto.Dirty")
	proto.RegisterType((*FileBlock)(nil), "formicproto.FileBlock")
	proto.RegisterType((*GrantAddrFSRequest)(nil), "formicproto.GrantAddrFSRequest")
	proto.RegisterType((*GrantAddrFSResponse)(nil), "formicproto.GrantAddrFSResponse")
	proto.RegisterType((*RevokeAddrFSRequest)(nil), "formicproto.RevokeAddrFSRequest")
	proto.RegisterType((*RevokeAddrFSResponse)(nil), "formicproto.RevokeAddrFSResponse")
	proto.RegisterType((*DirEntry)(nil), "formicproto.DirEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FileSystemAPI service

type FileSystemAPIClient interface {
	GrantAddrFS(ctx context.Context, in *GrantAddrFSRequest, opts ...grpc.CallOption) (*GrantAddrFSResponse, error)
	RevokeAddrFS(ctx context.Context, in *RevokeAddrFSRequest, opts ...grpc.CallOption) (*RevokeAddrFSResponse, error)
}

type fileSystemAPIClient struct {
	cc *grpc.ClientConn
}

func NewFileSystemAPIClient(cc *grpc.ClientConn) FileSystemAPIClient {
	return &fileSystemAPIClient{cc}
}

func (c *fileSystemAPIClient) GrantAddrFS(ctx context.Context, in *GrantAddrFSRequest, opts ...grpc.CallOption) (*GrantAddrFSResponse, error) {
	out := new(GrantAddrFSResponse)
	err := grpc.Invoke(ctx, "/formicproto.FileSystemAPI/GrantAddrFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) RevokeAddrFS(ctx context.Context, in *RevokeAddrFSRequest, opts ...grpc.CallOption) (*RevokeAddrFSResponse, error) {
	out := new(RevokeAddrFSResponse)
	err := grpc.Invoke(ctx, "/formicproto.FileSystemAPI/RevokeAddrFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FileSystemAPI service

type FileSystemAPIServer interface {
	GrantAddrFS(context.Context, *GrantAddrFSRequest) (*GrantAddrFSResponse, error)
	RevokeAddrFS(context.Context, *RevokeAddrFSRequest) (*RevokeAddrFSResponse, error)
}

func RegisterFileSystemAPIServer(s *grpc.Server, srv FileSystemAPIServer) {
	s.RegisterService(&_FileSystemAPI_serviceDesc, srv)
}

func _FileSystemAPI_GrantAddrFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantAddrFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).GrantAddrFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/formicproto.FileSystemAPI/GrantAddrFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).GrantAddrFS(ctx, req.(*GrantAddrFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_RevokeAddrFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeAddrFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).RevokeAddrFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/formicproto.FileSystemAPI/RevokeAddrFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).RevokeAddrFS(ctx, req.(*RevokeAddrFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileSystemAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "formicproto.FileSystemAPI",
	HandlerType: (*FileSystemAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GrantAddrFS",
			Handler:    _FileSystemAPI_GrantAddrFS_Handler,
		},
		{
			MethodName: "RevokeAddrFS",
			Handler:    _FileSystemAPI_RevokeAddrFS_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "formic_api.proto",
}

// Client API for Api service

type ApiClient interface {
}

type apiClient struct {
	cc *grpc.ClientConn
}

func NewApiClient(cc *grpc.ClientConn) ApiClient {
	return &apiClient{cc}
}

// Server API for Api service

type ApiServer interface {
}

func RegisterApiServer(s *grpc.Server, srv ApiServer) {
	s.RegisterService(&_Api_serviceDesc, srv)
}

var _Api_serviceDesc = grpc.ServiceDesc{
	ServiceName: "formicproto.Api",
	HandlerType: (*ApiServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "formic_api.proto",
}

func init() { proto.RegisterFile("formic_api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 663 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0xb1, 0xdd, 0xc6, 0x93, 0x06, 0x95, 0x6d, 0x55, 0x59, 0x11, 0x12, 0xc6, 0x12, 0x52,
	0xe0, 0x90, 0x43, 0xe0, 0x50, 0x71, 0x0b, 0x84, 0xa2, 0x4a, 0x1c, 0xd0, 0xa4, 0x95, 0xb8, 0x21,
	0x37, 0xde, 0x96, 0x55, 0x6a, 0x3b, 0x5d, 0x6f, 0x2a, 0xc2, 0x67, 0x70, 0xe7, 0x47, 0xf8, 0x12,
	0x3e, 0x07, 0xcd, 0xac, 0x5d, 0x3b, 0x02, 0xc2, 0x05, 0x71, 0xca, 0x7b, 0x2f, 0xbb, 0xcf, 0x33,
	0x6f, 0x66, 0x61, 0xff, 0xb2, 0xd0, 0x99, 0x9a, 0x7f, 0x4c, 0x96, 0x6a, 0xb4, 0xd4, 0x85, 0x29,
	0x44, 0xcf, 0x2a, 0x4c, 0xe2, 0x1f, 0x0e, 0x78, 0x13, 0x63, 0xb4, 0x38, 0x04, 0x5f, 0xe5, 0x45,
	0x2a, 0x43, 0x27, 0x72, 0x86, 0x1e, 0x5a, 0x42, 0x6a, 0x62, 0x54, 0x26, 0xc3, 0x4e, 0xe4, 0x0c,
	0x5d, 0xb4, 0x84, 0xd4, 0x8c, 0x55, 0xd7, 0xaa, 0x59, 0xad, 0xce, 0x59, 0xf5, 0xac, 0xca, 0x44,
	0x1c, 0xc1, 0xce, 0x5c, 0xb3, 0xec, 0xb3, 0x5c, 0x31, 0x21, 0xc0, 0xcb, 0xe8, 0x73, 0x3b, 0x91,
	0x33, 0xec, 0x23, 0x63, 0x72, 0xb8, 0x4d, 0xae, 0x55, 0x1a, 0xee, 0x46, 0xce, 0xd0, 0x47, 0x4b,
	0xe8, 0x64, 0xa9, 0xbe, 0xc8, 0xb0, 0xcb, 0x85, 0x31, 0x16, 0xfb, 0xe0, 0xae, 0x54, 0x1a, 0x06,
	0x7c, 0x99, 0x20, 0x29, 0x57, 0x2a, 0x0d, 0xc1, 0x2a, 0x57, 0x2a, 0x8d, 0xbf, 0xb9, 0x00, 0xa7,
	0xd4, 0xc5, 0x9b, 0xdc, 0xe8, 0xb5, 0x08, 0x61, 0xf7, 0x56, 0xea, 0x52, 0x15, 0x39, 0xb7, 0xd8,
	0xc7, 0x9a, 0x72, 0xeb, 0xe5, 0x54, 0x69, 0x6e, 0xb2, 0x8b, 0x96, 0x88, 0x27, 0xe0, 0x25, 0xc6,
	0x68, 0xee, 0xb1, 0x37, 0x7e, 0x30, 0x6a, 0xa5, 0x36, 0xa2, 0xc4, 0x90, 0xff, 0xa6, 0xfe, 0x96,
	0x89, 0x96, 0xb9, 0xe1, 0xb6, 0x3d, 0xac, 0x58, 0x93, 0xa7, 0xdf, 0xce, 0xf3, 0x21, 0x04, 0xf4,
	0xfb, 0xba, 0x58, 0xe5, 0x86, 0x5b, 0xf7, 0xb0, 0x11, 0xc8, 0x4b, 0x95, 0xef, 0x54, 0xbe, 0xe0,
	0x00, 0xba, 0x58, 0x31, 0xd2, 0x4d, 0xa2, 0xaf, 0xa4, 0xe1, 0x0c, 0x02, 0xac, 0x98, 0x38, 0x06,
	0xff, 0x33, 0xd7, 0x18, 0x44, 0xee, 0xb0, 0x37, 0x8e, 0x37, 0x6a, 0x6c, 0x5a, 0x1f, 0x7d, 0xa0,
	0x43, 0x0c, 0xd1, 0x5e, 0x20, 0xc7, 0x8b, 0xeb, 0x62, 0xbe, 0x28, 0x39, 0x30, 0x0f, 0x2b, 0x46,
	0xf5, 0x31, 0x9a, 0x51, 0xe0, 0x3d, 0x5b, 0xdf, 0x9d, 0x40, 0x93, 0xb8, 0x2c, 0x4f, 0xd3, 0xb0,
	0x1f, 0x39, 0xc3, 0x3d, 0x64, 0x3c, 0x38, 0x06, 0x68, 0xec, 0x69, 0x0a, 0x0b, 0xb9, 0xe6, 0x80,
	0x03, 0x24, 0x58, 0xcd, 0x74, 0x65, 0x37, 0x68, 0x0f, 0x2d, 0x79, 0xd9, 0x39, 0x76, 0xe2, 0x35,
	0x04, 0x67, 0x45, 0x76, 0x51, 0x9a, 0x22, 0xe7, 0xd1, 0xa7, 0xbc, 0x25, 0x8e, 0x5d, 0x9e, 0xb4,
	0x5e, 0xa9, 0x9b, 0xf6, 0xfa, 0xdd, 0xd4, 0xab, 0xc3, 0x65, 0xb8, 0x4d, 0x19, 0x4d, 0xdc, 0x5e,
	0x3b, 0xee, 0xa6, 0x4d, 0xbf, 0xdd, 0x66, 0xbc, 0x02, 0x7f, 0xaa, 0xb4, 0x59, 0xff, 0xe7, 0xcf,
	0x9e, 0x43, 0x70, 0xa2, 0xae, 0xe5, 0x2b, 0x62, 0x5b, 0xf6, 0x51, 0x80, 0x97, 0x26, 0x26, 0xa9,
	0x12, 0x63, 0x2c, 0x06, 0xd0, 0x9d, 0x7f, 0x92, 0xf3, 0x45, 0xb9, 0xca, 0xb8, 0x80, 0x3e, 0xde,
	0xf1, 0x18, 0x41, 0xbc, 0xd5, 0x49, 0x6e, 0x26, 0x69, 0xaa, 0x4f, 0x66, 0x28, 0x6f, 0x56, 0xb2,
	0xe4, 0x05, 0x3c, 0x2b, 0x16, 0x32, 0xaf, 0x86, 0x61, 0x09, 0x79, 0x9f, 0xcc, 0x54, 0xca, 0xde,
	0x01, 0x32, 0x26, 0x8d, 0xae, 0xb2, 0x6f, 0x80, 0x8c, 0xe3, 0xa7, 0x70, 0xb0, 0xe1, 0x59, 0x2e,
	0x8b, 0xbc, 0xe4, 0x0c, 0xa6, 0x54, 0x9a, 0xf5, 0x64, 0x1c, 0xcf, 0xe0, 0x00, 0xe5, 0x6d, 0xb1,
	0x90, 0xff, 0xf2, 0xfb, 0xcf, 0xe0, 0x70, 0xd3, 0x74, 0x4b, 0x01, 0x5f, 0x1d, 0xe8, 0x4e, 0x95,
	0xfe, 0xdb, 0x33, 0x17, 0xe0, 0xe5, 0x49, 0x35, 0xd4, 0x00, 0x19, 0x8b, 0xfb, 0xd0, 0x51, 0xf5,
	0x44, 0x3b, 0x2a, 0x15, 0x2f, 0x20, 0x30, 0xf5, 0x4e, 0xf2, 0x4c, 0x7b, 0xe3, 0xa3, 0x8d, 0x57,
	0x75, 0xb7, 0xb1, 0xd8, 0x1c, 0x24, 0x67, 0xb3, 0x5e, 0xda, 0xa7, 0xde, 0x47, 0xc6, 0xe3, 0xef,
	0x0e, 0xf4, 0x69, 0xd8, 0xb3, 0x75, 0x69, 0x64, 0x36, 0x79, 0x7f, 0x2a, 0x10, 0x7a, 0xad, 0x48,
	0xc5, 0xa3, 0x0d, 0xdf, 0x5f, 0x07, 0x38, 0x88, 0xfe, 0x7c, 0xc0, 0x86, 0x11, 0xdf, 0x13, 0xe7,
	0xb0, 0xd7, 0x8e, 0x49, 0x6c, 0xde, 0xf9, 0xcd, 0x58, 0x06, 0x8f, 0xb7, 0x9c, 0xa8, 0x6d, 0xc7,
	0x3e, 0xb8, 0x93, 0xa5, 0xba, 0xd8, 0xe1, 0x43, 0xcf, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0x98,
	0x4f, 0x8d, 0xe5, 0x44, 0x06, 0x00, 0x00,
}
