// Code generated by protoc-gen-go.
// source: formic_api.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	formic_api.proto

It has these top-level messages:
	DirEnt
	DirEntries
	Attr
	SetAttrRequest
	SetAttrResponse
	GetAttrRequest
	GetAttrResponse
	ReadRequest
	ReadResponse
	WriteRequest
	WriteResponse
	MkDirRequest
	MkDirResponse
	CreateRequest
	CreateResponse
	RemoveRequest
	RemoveResponse
	LookupRequest
	LookupResponse
	ReadDirAllRequest
	ReadDirAllResponse
	SymlinkRequest
	SymlinkResponse
	ReadlinkRequest
	ReadlinkResponse
	GetxattrRequest
	GetxattrResponse
	SetxattrRequest
	SetxattrResponse
	ListxattrRequest
	ListxattrResponse
	RemovexattrRequest
	RemovexattrResponse
	RenameRequest
	RenameResponse
	StatfsRequest
	StatfsResponse
	InitFsRequest
	InitFsResponse
	InodeEntry
	Tombstone
	Dirty
	DirEntry
	FileBlock
	ModFS
	CreateFSRequest
	CreateFSResponse
	ListFSRequest
	ListFSResponse
	ShowFSRequest
	ShowFSResponse
	DeleteFSRequest
	DeleteFSResponse
	UpdateFSRequest
	UpdateFSResponse
	GrantAddrFSRequest
	GrantAddrFSResponse
	RevokeAddrFSRequest
	RevokeAddrFSResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// DirEnt is a directory entry
type DirEnt struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Parent uint64 `protobuf:"varint,2,opt,name=parent" json:"parent,omitempty"`
	Type   uint32 `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
}

func (m *DirEnt) Reset()                    { *m = DirEnt{} }
func (m *DirEnt) String() string            { return proto1.CompactTextString(m) }
func (*DirEnt) ProtoMessage()               {}
func (*DirEnt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// DirEntries just contains a list of directory entries
type DirEntries struct {
	DirEntries []*DirEnt `protobuf:"bytes,1,rep,name=DirEntries,json=dirEntries" json:"DirEntries,omitempty"`
}

func (m *DirEntries) Reset()                    { *m = DirEntries{} }
func (m *DirEntries) String() string            { return proto1.CompactTextString(m) }
func (*DirEntries) ProtoMessage()               {}
func (*DirEntries) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DirEntries) GetDirEntries() []*DirEnt {
	if m != nil {
		return m.DirEntries
	}
	return nil
}

// Attr
type Attr struct {
	Inode  uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Atime  int64  `protobuf:"varint,2,opt,name=atime" json:"atime,omitempty"`
	Mtime  int64  `protobuf:"varint,3,opt,name=mtime" json:"mtime,omitempty"`
	Ctime  int64  `protobuf:"varint,4,opt,name=ctime" json:"ctime,omitempty"`
	Crtime int64  `protobuf:"varint,5,opt,name=crtime" json:"crtime,omitempty"`
	Mode   uint32 `protobuf:"varint,6,opt,name=mode" json:"mode,omitempty"`
	Valid  int32  `protobuf:"varint,7,opt,name=valid" json:"valid,omitempty"`
	Size   uint64 `protobuf:"varint,8,opt,name=size" json:"size,omitempty"`
	Uid    uint32 `protobuf:"varint,9,opt,name=uid" json:"uid,omitempty"`
	Gid    uint32 `protobuf:"varint,10,opt,name=gid" json:"gid,omitempty"`
}

func (m *Attr) Reset()                    { *m = Attr{} }
func (m *Attr) String() string            { return proto1.CompactTextString(m) }
func (*Attr) ProtoMessage()               {}
func (*Attr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// SetAttrRequest
type SetAttrRequest struct {
	Attr  *Attr  `protobuf:"bytes,1,opt,name=attr" json:"attr,omitempty"`
	Valid uint32 `protobuf:"varint,2,opt,name=valid" json:"valid,omitempty"`
}

func (m *SetAttrRequest) Reset()                    { *m = SetAttrRequest{} }
func (m *SetAttrRequest) String() string            { return proto1.CompactTextString(m) }
func (*SetAttrRequest) ProtoMessage()               {}
func (*SetAttrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SetAttrRequest) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

// SetAttrResponse
type SetAttrResponse struct {
	Attr *Attr `protobuf:"bytes,1,opt,name=attr" json:"attr,omitempty"`
}

func (m *SetAttrResponse) Reset()                    { *m = SetAttrResponse{} }
func (m *SetAttrResponse) String() string            { return proto1.CompactTextString(m) }
func (*SetAttrResponse) ProtoMessage()               {}
func (*SetAttrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SetAttrResponse) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

// GetAttrRequest
type GetAttrRequest struct {
	Inode uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
}

func (m *GetAttrRequest) Reset()                    { *m = GetAttrRequest{} }
func (m *GetAttrRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetAttrRequest) ProtoMessage()               {}
func (*GetAttrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

// GetAttrResponse
type GetAttrResponse struct {
	Attr *Attr `protobuf:"bytes,1,opt,name=attr" json:"attr,omitempty"`
}

func (m *GetAttrResponse) Reset()                    { *m = GetAttrResponse{} }
func (m *GetAttrResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetAttrResponse) ProtoMessage()               {}
func (*GetAttrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetAttrResponse) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

// ReqadRequest
type ReadRequest struct {
	Inode  uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Size   int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto1.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

// ReadResponse
type ReadResponse struct {
	Inode   uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto1.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

// WriteRequest
type WriteRequest struct {
	Inode   uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Offset  int64  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Payload []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *WriteRequest) Reset()                    { *m = WriteRequest{} }
func (m *WriteRequest) String() string            { return proto1.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()               {}
func (*WriteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// WriteResponse place holder. Maybe use an enum so
// we can map to fuse errors ?
type WriteResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
}

func (m *WriteResponse) Reset()                    { *m = WriteResponse{} }
func (m *WriteResponse) String() string            { return proto1.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()               {}
func (*WriteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

// MkdirRequest
type MkDirRequest struct {
	Parent uint64 `protobuf:"varint,1,opt,name=parent" json:"parent,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Attr   *Attr  `protobuf:"bytes,3,opt,name=attr" json:"attr,omitempty"`
}

func (m *MkDirRequest) Reset()                    { *m = MkDirRequest{} }
func (m *MkDirRequest) String() string            { return proto1.CompactTextString(m) }
func (*MkDirRequest) ProtoMessage()               {}
func (*MkDirRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *MkDirRequest) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

// MkdirResponse
type MkDirResponse struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Attr *Attr  `protobuf:"bytes,2,opt,name=attr" json:"attr,omitempty"`
}

func (m *MkDirResponse) Reset()                    { *m = MkDirResponse{} }
func (m *MkDirResponse) String() string            { return proto1.CompactTextString(m) }
func (*MkDirResponse) ProtoMessage()               {}
func (*MkDirResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *MkDirResponse) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

// CreateRequest
type CreateRequest struct {
	Parent uint64 `protobuf:"varint,1,opt,name=parent" json:"parent,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Attr   *Attr  `protobuf:"bytes,3,opt,name=attr" json:"attr,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CreateRequest) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

// CreateResponse
type CreateResponse struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Attr *Attr  `protobuf:"bytes,2,opt,name=attr" json:"attr,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto1.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CreateResponse) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

// RemoveRequest
type RemoveRequest struct {
	Parent uint64 `protobuf:"varint,1,opt,name=parent" json:"parent,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *RemoveRequest) Reset()                    { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string            { return proto1.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()               {}
func (*RemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

// RemoveResponse
type RemoveResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
}

func (m *RemoveResponse) Reset()                    { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string            { return proto1.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()               {}
func (*RemoveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

// LookupRequest
type LookupRequest struct {
	Parent uint64 `protobuf:"varint,1,opt,name=parent" json:"parent,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *LookupRequest) Reset()                    { *m = LookupRequest{} }
func (m *LookupRequest) String() string            { return proto1.CompactTextString(m) }
func (*LookupRequest) ProtoMessage()               {}
func (*LookupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

// LookupResponse is a directory entry
type LookupResponse struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Attr *Attr  `protobuf:"bytes,2,opt,name=attr" json:"attr,omitempty"`
}

func (m *LookupResponse) Reset()                    { *m = LookupResponse{} }
func (m *LookupResponse) String() string            { return proto1.CompactTextString(m) }
func (*LookupResponse) ProtoMessage()               {}
func (*LookupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *LookupResponse) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

// ReadDirAllRequest
type ReadDirAllRequest struct {
	Inode uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
}

func (m *ReadDirAllRequest) Reset()                    { *m = ReadDirAllRequest{} }
func (m *ReadDirAllRequest) String() string            { return proto1.CompactTextString(m) }
func (*ReadDirAllRequest) ProtoMessage()               {}
func (*ReadDirAllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

// ReadDirAllResponse
type ReadDirAllResponse struct {
	DirEntries []*DirEnt `protobuf:"bytes,1,rep,name=DirEntries,json=dirEntries" json:"DirEntries,omitempty"`
}

func (m *ReadDirAllResponse) Reset()                    { *m = ReadDirAllResponse{} }
func (m *ReadDirAllResponse) String() string            { return proto1.CompactTextString(m) }
func (*ReadDirAllResponse) ProtoMessage()               {}
func (*ReadDirAllResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ReadDirAllResponse) GetDirEntries() []*DirEnt {
	if m != nil {
		return m.DirEntries
	}
	return nil
}

// SymlinkRequest
type SymlinkRequest struct {
	Parent uint64 `protobuf:"varint,1,opt,name=parent" json:"parent,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Target string `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	Uid    uint32 `protobuf:"varint,4,opt,name=uid" json:"uid,omitempty"`
	Gid    uint32 `protobuf:"varint,5,opt,name=gid" json:"gid,omitempty"`
}

func (m *SymlinkRequest) Reset()                    { *m = SymlinkRequest{} }
func (m *SymlinkRequest) String() string            { return proto1.CompactTextString(m) }
func (*SymlinkRequest) ProtoMessage()               {}
func (*SymlinkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

// SymlinkResponse
type SymlinkResponse struct {
	Parent uint64 `protobuf:"varint,1,opt,name=parent" json:"parent,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Attr   *Attr  `protobuf:"bytes,3,opt,name=attr" json:"attr,omitempty"`
}

func (m *SymlinkResponse) Reset()                    { *m = SymlinkResponse{} }
func (m *SymlinkResponse) String() string            { return proto1.CompactTextString(m) }
func (*SymlinkResponse) ProtoMessage()               {}
func (*SymlinkResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *SymlinkResponse) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

// ReadlinkRequest
type ReadlinkRequest struct {
	Inode uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
}

func (m *ReadlinkRequest) Reset()                    { *m = ReadlinkRequest{} }
func (m *ReadlinkRequest) String() string            { return proto1.CompactTextString(m) }
func (*ReadlinkRequest) ProtoMessage()               {}
func (*ReadlinkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

// ReadlinkResponse
type ReadlinkResponse struct {
	Target string `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
}

func (m *ReadlinkResponse) Reset()                    { *m = ReadlinkResponse{} }
func (m *ReadlinkResponse) String() string            { return proto1.CompactTextString(m) }
func (*ReadlinkResponse) ProtoMessage()               {}
func (*ReadlinkResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

// Getxattr
type GetxattrRequest struct {
	Inode    uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Size     uint32 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Position uint32 `protobuf:"varint,4,opt,name=position" json:"position,omitempty"`
}

func (m *GetxattrRequest) Reset()                    { *m = GetxattrRequest{} }
func (m *GetxattrRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetxattrRequest) ProtoMessage()               {}
func (*GetxattrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type GetxattrResponse struct {
	Xattr []byte `protobuf:"bytes,1,opt,name=xattr,proto3" json:"xattr,omitempty"`
}

func (m *GetxattrResponse) Reset()                    { *m = GetxattrResponse{} }
func (m *GetxattrResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetxattrResponse) ProtoMessage()               {}
func (*GetxattrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

// Setxattr
type SetxattrRequest struct {
	Inode    uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Value    []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Position uint32 `protobuf:"varint,4,opt,name=position" json:"position,omitempty"`
	Flags    uint32 `protobuf:"varint,5,opt,name=flags" json:"flags,omitempty"`
}

func (m *SetxattrRequest) Reset()                    { *m = SetxattrRequest{} }
func (m *SetxattrRequest) String() string            { return proto1.CompactTextString(m) }
func (*SetxattrRequest) ProtoMessage()               {}
func (*SetxattrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

type SetxattrResponse struct {
}

func (m *SetxattrResponse) Reset()                    { *m = SetxattrResponse{} }
func (m *SetxattrResponse) String() string            { return proto1.CompactTextString(m) }
func (*SetxattrResponse) ProtoMessage()               {}
func (*SetxattrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

// Listxattr
type ListxattrRequest struct {
	Inode    uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Size     uint32 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Position uint32 `protobuf:"varint,3,opt,name=position" json:"position,omitempty"`
}

func (m *ListxattrRequest) Reset()                    { *m = ListxattrRequest{} }
func (m *ListxattrRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListxattrRequest) ProtoMessage()               {}
func (*ListxattrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

type ListxattrResponse struct {
	Xattr []byte `protobuf:"bytes,1,opt,name=xattr,proto3" json:"xattr,omitempty"`
}

func (m *ListxattrResponse) Reset()                    { *m = ListxattrResponse{} }
func (m *ListxattrResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListxattrResponse) ProtoMessage()               {}
func (*ListxattrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

// Removexattr
type RemovexattrRequest struct {
	Inode uint64 `protobuf:"varint,1,opt,name=inode" json:"inode,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *RemovexattrRequest) Reset()                    { *m = RemovexattrRequest{} }
func (m *RemovexattrRequest) String() string            { return proto1.CompactTextString(m) }
func (*RemovexattrRequest) ProtoMessage()               {}
func (*RemovexattrRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

type RemovexattrResponse struct {
}

func (m *RemovexattrResponse) Reset()                    { *m = RemovexattrResponse{} }
func (m *RemovexattrResponse) String() string            { return proto1.CompactTextString(m) }
func (*RemovexattrResponse) ProtoMessage()               {}
func (*RemovexattrResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

// Rename
type RenameRequest struct {
	OldParent uint64 `protobuf:"varint,1,opt,name=oldParent" json:"oldParent,omitempty"`
	NewParent uint64 `protobuf:"varint,2,opt,name=newParent" json:"newParent,omitempty"`
	OldName   string `protobuf:"bytes,3,opt,name=oldName" json:"oldName,omitempty"`
	NewName   string `protobuf:"bytes,4,opt,name=newName" json:"newName,omitempty"`
}

func (m *RenameRequest) Reset()                    { *m = RenameRequest{} }
func (m *RenameRequest) String() string            { return proto1.CompactTextString(m) }
func (*RenameRequest) ProtoMessage()               {}
func (*RenameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

type RenameResponse struct {
}

func (m *RenameResponse) Reset()                    { *m = RenameResponse{} }
func (m *RenameResponse) String() string            { return proto1.CompactTextString(m) }
func (*RenameResponse) ProtoMessage()               {}
func (*RenameResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

// Statfs
type StatfsRequest struct {
}

func (m *StatfsRequest) Reset()                    { *m = StatfsRequest{} }
func (m *StatfsRequest) String() string            { return proto1.CompactTextString(m) }
func (*StatfsRequest) ProtoMessage()               {}
func (*StatfsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

type StatfsResponse struct {
	Blocks  uint64 `protobuf:"varint,1,opt,name=blocks" json:"blocks,omitempty"`
	Bfree   uint64 `protobuf:"varint,2,opt,name=bfree" json:"bfree,omitempty"`
	Bavail  uint64 `protobuf:"varint,3,opt,name=bavail" json:"bavail,omitempty"`
	Files   uint64 `protobuf:"varint,4,opt,name=files" json:"files,omitempty"`
	Ffree   uint64 `protobuf:"varint,5,opt,name=ffree" json:"ffree,omitempty"`
	Bsize   uint32 `protobuf:"varint,6,opt,name=bsize" json:"bsize,omitempty"`
	Namelen uint32 `protobuf:"varint,7,opt,name=namelen" json:"namelen,omitempty"`
	Frsize  uint32 `protobuf:"varint,8,opt,name=frsize" json:"frsize,omitempty"`
}

func (m *StatfsResponse) Reset()                    { *m = StatfsResponse{} }
func (m *StatfsResponse) String() string            { return proto1.CompactTextString(m) }
func (*StatfsResponse) ProtoMessage()               {}
func (*StatfsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

// InitFs
type InitFsRequest struct {
}

func (m *InitFsRequest) Reset()                    { *m = InitFsRequest{} }
func (m *InitFsRequest) String() string            { return proto1.CompactTextString(m) }
func (*InitFsRequest) ProtoMessage()               {}
func (*InitFsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

type InitFsResponse struct {
}

func (m *InitFsResponse) Reset()                    { *m = InitFsResponse{} }
func (m *InitFsResponse) String() string            { return proto1.CompactTextString(m) }
func (*InitFsResponse) ProtoMessage()               {}
func (*InitFsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

// Inode
// This is used for serialization of the inode metadata
// This is *not* used for api calls
type InodeEntry struct {
	Version   uint32            `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	IsDir     bool              `protobuf:"varint,2,opt,name=isDir" json:"isDir,omitempty"`
	Attr      *Attr             `protobuf:"bytes,3,opt,name=attr" json:"attr,omitempty"`
	Parent    uint64            `protobuf:"varint,4,opt,name=parent" json:"parent,omitempty"`
	Inode     uint64            `protobuf:"varint,5,opt,name=inode" json:"inode,omitempty"`
	NodeCount uint64            `protobuf:"varint,6,opt,name=nodeCount" json:"nodeCount,omitempty"`
	IsLink    bool              `protobuf:"varint,7,opt,name=isLink" json:"isLink,omitempty"`
	Target    string            `protobuf:"bytes,8,opt,name=target" json:"target,omitempty"`
	Xattr     map[string][]byte `protobuf:"bytes,9,rep,name=xattr" json:"xattr,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Blocks    uint64            `protobuf:"varint,10,opt,name=blocks" json:"blocks,omitempty"`
	BlockSize uint64            `protobuf:"varint,11,opt,name=blockSize" json:"blockSize,omitempty"`
	FsId      []byte            `protobuf:"bytes,13,opt,name=fsId,proto3" json:"fsId,omitempty"`
}

func (m *InodeEntry) Reset()                    { *m = InodeEntry{} }
func (m *InodeEntry) String() string            { return proto1.CompactTextString(m) }
func (*InodeEntry) ProtoMessage()               {}
func (*InodeEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *InodeEntry) GetAttr() *Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

func (m *InodeEntry) GetXattr() map[string][]byte {
	if m != nil {
		return m.Xattr
	}
	return nil
}

// Tombstone
// Stores information needed to keep track of deleted items
type Tombstone struct {
	Dtime  int64  `protobuf:"varint,1,opt,name=dtime" json:"dtime,omitempty"`
	Qtime  int64  `protobuf:"varint,2,opt,name=qtime" json:"qtime,omitempty"`
	FsId   []byte `protobuf:"bytes,3,opt,name=fsId,proto3" json:"fsId,omitempty"`
	Inode  uint64 `protobuf:"varint,4,opt,name=inode" json:"inode,omitempty"`
	Blocks uint64 `protobuf:"varint,5,opt,name=blocks" json:"blocks,omitempty"`
}

func (m *Tombstone) Reset()                    { *m = Tombstone{} }
func (m *Tombstone) String() string            { return proto1.CompactTextString(m) }
func (*Tombstone) ProtoMessage()               {}
func (*Tombstone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

// Dirty
// Stores information needed to keep track of dirty items
type Dirty struct {
	Dtime  int64  `protobuf:"varint,1,opt,name=dtime" json:"dtime,omitempty"`
	Qtime  int64  `protobuf:"varint,2,opt,name=qtime" json:"qtime,omitempty"`
	FsId   []byte `protobuf:"bytes,3,opt,name=fsId,proto3" json:"fsId,omitempty"`
	Inode  uint64 `protobuf:"varint,4,opt,name=inode" json:"inode,omitempty"`
	Blocks uint64 `protobuf:"varint,5,opt,name=blocks" json:"blocks,omitempty"`
}

func (m *Dirty) Reset()                    { *m = Dirty{} }
func (m *Dirty) String() string            { return proto1.CompactTextString(m) }
func (*Dirty) ProtoMessage()               {}
func (*Dirty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

// DirEntry
// This is used for the serialization of dir info in the group score
// This is *not* used for api calls
type DirEntry struct {
	Version   uint32     `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Name      string     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Id        []byte     `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Tombstone *Tombstone `protobuf:"bytes,4,opt,name=tombstone" json:"tombstone,omitempty"`
	Type      uint32     `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
}

func (m *DirEntry) Reset()                    { *m = DirEntry{} }
func (m *DirEntry) String() string            { return proto1.CompactTextString(m) }
func (*DirEntry) ProtoMessage()               {}
func (*DirEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *DirEntry) GetTombstone() *Tombstone {
	if m != nil {
		return m.Tombstone
	}
	return nil
}

// FileBlock
// This is used for storing blocks in value store
// This is *not* used for api calls
type FileBlock struct {
	Version  uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Checksum uint32 `protobuf:"varint,3,opt,name=checksum" json:"checksum,omitempty"`
}

func (m *FileBlock) Reset()                    { *m = FileBlock{} }
func (m *FileBlock) String() string            { return proto1.CompactTextString(m) }
func (*FileBlock) ProtoMessage()               {}
func (*FileBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

// ModFS ...
type ModFS struct {
	Name   string `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=Status,json=status" json:"Status,omitempty"`
}

func (m *ModFS) Reset()                    { *m = ModFS{} }
func (m *ModFS) String() string            { return proto1.CompactTextString(m) }
func (*ModFS) ProtoMessage()               {}
func (*ModFS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

// Request to create a new filesystem
type CreateFSRequest struct {
	Token  string `protobuf:"bytes,1,opt,name=Token,json=token" json:"Token,omitempty"`
	FSName string `protobuf:"bytes,2,opt,name=FSName,json=fSName" json:"FSName,omitempty"`
}

func (m *CreateFSRequest) Reset()                    { *m = CreateFSRequest{} }
func (m *CreateFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateFSRequest) ProtoMessage()               {}
func (*CreateFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

// Response from creating a new filesystem
type CreateFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data,json=data" json:"Data,omitempty"`
}

func (m *CreateFSResponse) Reset()                    { *m = CreateFSResponse{} }
func (m *CreateFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*CreateFSResponse) ProtoMessage()               {}
func (*CreateFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

// Request a list of all file systems for a given account
type ListFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token,json=token" json:"Token,omitempty"`
}

func (m *ListFSRequest) Reset()                    { *m = ListFSRequest{} }
func (m *ListFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListFSRequest) ProtoMessage()               {}
func (*ListFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

// Response for displaying a list of all an accounts file systems.
type ListFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data,json=data" json:"Data,omitempty"`
}

func (m *ListFSResponse) Reset()                    { *m = ListFSResponse{} }
func (m *ListFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListFSResponse) ProtoMessage()               {}
func (*ListFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

// Request to show the specific details about a file system
type ShowFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token,json=token" json:"Token,omitempty"`
	FSid  string `protobuf:"bytes,2,opt,name=FSid,json=fSid" json:"FSid,omitempty"`
}

func (m *ShowFSRequest) Reset()                    { *m = ShowFSRequest{} }
func (m *ShowFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*ShowFSRequest) ProtoMessage()               {}
func (*ShowFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

// Response for a specific file system for an account.
type ShowFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data,json=data" json:"Data,omitempty"`
}

func (m *ShowFSResponse) Reset()                    { *m = ShowFSResponse{} }
func (m *ShowFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*ShowFSResponse) ProtoMessage()               {}
func (*ShowFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

// Request to delete a specific file system
type DeleteFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token,json=token" json:"Token,omitempty"`
	FSid  string `protobuf:"bytes,2,opt,name=FSid,json=fSid" json:"FSid,omitempty"`
}

func (m *DeleteFSRequest) Reset()                    { *m = DeleteFSRequest{} }
func (m *DeleteFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteFSRequest) ProtoMessage()               {}
func (*DeleteFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

// Response from deleting a file system
type DeleteFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data,json=data" json:"Data,omitempty"`
}

func (m *DeleteFSResponse) Reset()                    { *m = DeleteFSResponse{} }
func (m *DeleteFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteFSResponse) ProtoMessage()               {}
func (*DeleteFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

// Request to update a specific file system's information
type UpdateFSRequest struct {
	Token   string `protobuf:"bytes,1,opt,name=Token,json=token" json:"Token,omitempty"`
	FSid    string `protobuf:"bytes,2,opt,name=FSid,json=fSid" json:"FSid,omitempty"`
	Filesys *ModFS `protobuf:"bytes,3,opt,name=Filesys,json=filesys" json:"Filesys,omitempty"`
}

func (m *UpdateFSRequest) Reset()                    { *m = UpdateFSRequest{} }
func (m *UpdateFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateFSRequest) ProtoMessage()               {}
func (*UpdateFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *UpdateFSRequest) GetFilesys() *ModFS {
	if m != nil {
		return m.Filesys
	}
	return nil
}

// Response from an update operation
type UpdateFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data,json=data" json:"Data,omitempty"`
}

func (m *UpdateFSResponse) Reset()                    { *m = UpdateFSResponse{} }
func (m *UpdateFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*UpdateFSResponse) ProtoMessage()               {}
func (*UpdateFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

// Request grant an ip address access to a file system
type GrantAddrFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token,json=token" json:"Token,omitempty"`
	FSid  string `protobuf:"bytes,2,opt,name=FSid,json=fSid" json:"FSid,omitempty"`
	Addr  string `protobuf:"bytes,3,opt,name=Addr,json=addr" json:"Addr,omitempty"`
}

func (m *GrantAddrFSRequest) Reset()                    { *m = GrantAddrFSRequest{} }
func (m *GrantAddrFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*GrantAddrFSRequest) ProtoMessage()               {}
func (*GrantAddrFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

// Response from granting ip address access to a file system
type GrantAddrFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data,json=data" json:"Data,omitempty"`
}

func (m *GrantAddrFSResponse) Reset()                    { *m = GrantAddrFSResponse{} }
func (m *GrantAddrFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*GrantAddrFSResponse) ProtoMessage()               {}
func (*GrantAddrFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

// Request revoke an ip address access to a file system
type RevokeAddrFSRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token,json=token" json:"Token,omitempty"`
	FSid  string `protobuf:"bytes,2,opt,name=FSid,json=fSid" json:"FSid,omitempty"`
	Addr  string `protobuf:"bytes,3,opt,name=Addr,json=addr" json:"Addr,omitempty"`
}

func (m *RevokeAddrFSRequest) Reset()                    { *m = RevokeAddrFSRequest{} }
func (m *RevokeAddrFSRequest) String() string            { return proto1.CompactTextString(m) }
func (*RevokeAddrFSRequest) ProtoMessage()               {}
func (*RevokeAddrFSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

// Response from revoking ip address access to a file system
type RevokeAddrFSResponse struct {
	Data string `protobuf:"bytes,1,opt,name=Data,json=data" json:"Data,omitempty"`
}

func (m *RevokeAddrFSResponse) Reset()                    { *m = RevokeAddrFSResponse{} }
func (m *RevokeAddrFSResponse) String() string            { return proto1.CompactTextString(m) }
func (*RevokeAddrFSResponse) ProtoMessage()               {}
func (*RevokeAddrFSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func init() {
	proto1.RegisterType((*DirEnt)(nil), "proto.DirEnt")
	proto1.RegisterType((*DirEntries)(nil), "proto.DirEntries")
	proto1.RegisterType((*Attr)(nil), "proto.Attr")
	proto1.RegisterType((*SetAttrRequest)(nil), "proto.SetAttrRequest")
	proto1.RegisterType((*SetAttrResponse)(nil), "proto.SetAttrResponse")
	proto1.RegisterType((*GetAttrRequest)(nil), "proto.GetAttrRequest")
	proto1.RegisterType((*GetAttrResponse)(nil), "proto.GetAttrResponse")
	proto1.RegisterType((*ReadRequest)(nil), "proto.ReadRequest")
	proto1.RegisterType((*ReadResponse)(nil), "proto.ReadResponse")
	proto1.RegisterType((*WriteRequest)(nil), "proto.WriteRequest")
	proto1.RegisterType((*WriteResponse)(nil), "proto.WriteResponse")
	proto1.RegisterType((*MkDirRequest)(nil), "proto.MkDirRequest")
	proto1.RegisterType((*MkDirResponse)(nil), "proto.MkDirResponse")
	proto1.RegisterType((*CreateRequest)(nil), "proto.CreateRequest")
	proto1.RegisterType((*CreateResponse)(nil), "proto.CreateResponse")
	proto1.RegisterType((*RemoveRequest)(nil), "proto.RemoveRequest")
	proto1.RegisterType((*RemoveResponse)(nil), "proto.RemoveResponse")
	proto1.RegisterType((*LookupRequest)(nil), "proto.LookupRequest")
	proto1.RegisterType((*LookupResponse)(nil), "proto.LookupResponse")
	proto1.RegisterType((*ReadDirAllRequest)(nil), "proto.ReadDirAllRequest")
	proto1.RegisterType((*ReadDirAllResponse)(nil), "proto.ReadDirAllResponse")
	proto1.RegisterType((*SymlinkRequest)(nil), "proto.SymlinkRequest")
	proto1.RegisterType((*SymlinkResponse)(nil), "proto.SymlinkResponse")
	proto1.RegisterType((*ReadlinkRequest)(nil), "proto.ReadlinkRequest")
	proto1.RegisterType((*ReadlinkResponse)(nil), "proto.ReadlinkResponse")
	proto1.RegisterType((*GetxattrRequest)(nil), "proto.GetxattrRequest")
	proto1.RegisterType((*GetxattrResponse)(nil), "proto.GetxattrResponse")
	proto1.RegisterType((*SetxattrRequest)(nil), "proto.SetxattrRequest")
	proto1.RegisterType((*SetxattrResponse)(nil), "proto.SetxattrResponse")
	proto1.RegisterType((*ListxattrRequest)(nil), "proto.ListxattrRequest")
	proto1.RegisterType((*ListxattrResponse)(nil), "proto.ListxattrResponse")
	proto1.RegisterType((*RemovexattrRequest)(nil), "proto.RemovexattrRequest")
	proto1.RegisterType((*RemovexattrResponse)(nil), "proto.RemovexattrResponse")
	proto1.RegisterType((*RenameRequest)(nil), "proto.RenameRequest")
	proto1.RegisterType((*RenameResponse)(nil), "proto.RenameResponse")
	proto1.RegisterType((*StatfsRequest)(nil), "proto.StatfsRequest")
	proto1.RegisterType((*StatfsResponse)(nil), "proto.StatfsResponse")
	proto1.RegisterType((*InitFsRequest)(nil), "proto.InitFsRequest")
	proto1.RegisterType((*InitFsResponse)(nil), "proto.InitFsResponse")
	proto1.RegisterType((*InodeEntry)(nil), "proto.InodeEntry")
	proto1.RegisterType((*Tombstone)(nil), "proto.Tombstone")
	proto1.RegisterType((*Dirty)(nil), "proto.Dirty")
	proto1.RegisterType((*DirEntry)(nil), "proto.DirEntry")
	proto1.RegisterType((*FileBlock)(nil), "proto.FileBlock")
	proto1.RegisterType((*ModFS)(nil), "proto.ModFS")
	proto1.RegisterType((*CreateFSRequest)(nil), "proto.CreateFSRequest")
	proto1.RegisterType((*CreateFSResponse)(nil), "proto.CreateFSResponse")
	proto1.RegisterType((*ListFSRequest)(nil), "proto.ListFSRequest")
	proto1.RegisterType((*ListFSResponse)(nil), "proto.ListFSResponse")
	proto1.RegisterType((*ShowFSRequest)(nil), "proto.ShowFSRequest")
	proto1.RegisterType((*ShowFSResponse)(nil), "proto.ShowFSResponse")
	proto1.RegisterType((*DeleteFSRequest)(nil), "proto.DeleteFSRequest")
	proto1.RegisterType((*DeleteFSResponse)(nil), "proto.DeleteFSResponse")
	proto1.RegisterType((*UpdateFSRequest)(nil), "proto.UpdateFSRequest")
	proto1.RegisterType((*UpdateFSResponse)(nil), "proto.UpdateFSResponse")
	proto1.RegisterType((*GrantAddrFSRequest)(nil), "proto.GrantAddrFSRequest")
	proto1.RegisterType((*GrantAddrFSResponse)(nil), "proto.GrantAddrFSResponse")
	proto1.RegisterType((*RevokeAddrFSRequest)(nil), "proto.RevokeAddrFSRequest")
	proto1.RegisterType((*RevokeAddrFSResponse)(nil), "proto.RevokeAddrFSResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Api service

type ApiClient interface {
	SetAttr(ctx context.Context, in *SetAttrRequest, opts ...grpc.CallOption) (*SetAttrResponse, error)
	GetAttr(ctx context.Context, in *GetAttrRequest, opts ...grpc.CallOption) (*GetAttrResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error)
	MkDir(ctx context.Context, in *MkDirRequest, opts ...grpc.CallOption) (*MkDirResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error)
	ReadDirAll(ctx context.Context, in *ReadDirAllRequest, opts ...grpc.CallOption) (*ReadDirAllResponse, error)
	Symlink(ctx context.Context, in *SymlinkRequest, opts ...grpc.CallOption) (*SymlinkResponse, error)
	Readlink(ctx context.Context, in *ReadlinkRequest, opts ...grpc.CallOption) (*ReadlinkResponse, error)
	Getxattr(ctx context.Context, in *GetxattrRequest, opts ...grpc.CallOption) (*GetxattrResponse, error)
	Setxattr(ctx context.Context, in *SetxattrRequest, opts ...grpc.CallOption) (*SetxattrResponse, error)
	Listxattr(ctx context.Context, in *ListxattrRequest, opts ...grpc.CallOption) (*ListxattrResponse, error)
	Removexattr(ctx context.Context, in *RemovexattrRequest, opts ...grpc.CallOption) (*RemovexattrResponse, error)
	Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error)
	Statfs(ctx context.Context, in *StatfsRequest, opts ...grpc.CallOption) (*StatfsResponse, error)
	InitFs(ctx context.Context, in *InitFsRequest, opts ...grpc.CallOption) (*InitFsResponse, error)
}

type apiClient struct {
	cc *grpc.ClientConn
}

func NewApiClient(cc *grpc.ClientConn) ApiClient {
	return &apiClient{cc}
}

func (c *apiClient) SetAttr(ctx context.Context, in *SetAttrRequest, opts ...grpc.CallOption) (*SetAttrResponse, error) {
	out := new(SetAttrResponse)
	err := grpc.Invoke(ctx, "/proto.Api/SetAttr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) GetAttr(ctx context.Context, in *GetAttrRequest, opts ...grpc.CallOption) (*GetAttrResponse, error) {
	out := new(GetAttrResponse)
	err := grpc.Invoke(ctx, "/proto.Api/GetAttr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Write", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) MkDir(ctx context.Context, in *MkDirRequest, opts ...grpc.CallOption) (*MkDirResponse, error) {
	out := new(MkDirResponse)
	err := grpc.Invoke(ctx, "/proto.Api/MkDir", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error) {
	out := new(LookupResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Lookup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) ReadDirAll(ctx context.Context, in *ReadDirAllRequest, opts ...grpc.CallOption) (*ReadDirAllResponse, error) {
	out := new(ReadDirAllResponse)
	err := grpc.Invoke(ctx, "/proto.Api/ReadDirAll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Symlink(ctx context.Context, in *SymlinkRequest, opts ...grpc.CallOption) (*SymlinkResponse, error) {
	out := new(SymlinkResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Symlink", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Readlink(ctx context.Context, in *ReadlinkRequest, opts ...grpc.CallOption) (*ReadlinkResponse, error) {
	out := new(ReadlinkResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Readlink", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Getxattr(ctx context.Context, in *GetxattrRequest, opts ...grpc.CallOption) (*GetxattrResponse, error) {
	out := new(GetxattrResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Getxattr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Setxattr(ctx context.Context, in *SetxattrRequest, opts ...grpc.CallOption) (*SetxattrResponse, error) {
	out := new(SetxattrResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Setxattr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Listxattr(ctx context.Context, in *ListxattrRequest, opts ...grpc.CallOption) (*ListxattrResponse, error) {
	out := new(ListxattrResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Listxattr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Removexattr(ctx context.Context, in *RemovexattrRequest, opts ...grpc.CallOption) (*RemovexattrResponse, error) {
	out := new(RemovexattrResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Removexattr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error) {
	out := new(RenameResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Rename", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) Statfs(ctx context.Context, in *StatfsRequest, opts ...grpc.CallOption) (*StatfsResponse, error) {
	out := new(StatfsResponse)
	err := grpc.Invoke(ctx, "/proto.Api/Statfs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiClient) InitFs(ctx context.Context, in *InitFsRequest, opts ...grpc.CallOption) (*InitFsResponse, error) {
	out := new(InitFsResponse)
	err := grpc.Invoke(ctx, "/proto.Api/InitFs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Api service

type ApiServer interface {
	SetAttr(context.Context, *SetAttrRequest) (*SetAttrResponse, error)
	GetAttr(context.Context, *GetAttrRequest) (*GetAttrResponse, error)
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	Write(context.Context, *WriteRequest) (*WriteResponse, error)
	MkDir(context.Context, *MkDirRequest) (*MkDirResponse, error)
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	Lookup(context.Context, *LookupRequest) (*LookupResponse, error)
	ReadDirAll(context.Context, *ReadDirAllRequest) (*ReadDirAllResponse, error)
	Symlink(context.Context, *SymlinkRequest) (*SymlinkResponse, error)
	Readlink(context.Context, *ReadlinkRequest) (*ReadlinkResponse, error)
	Getxattr(context.Context, *GetxattrRequest) (*GetxattrResponse, error)
	Setxattr(context.Context, *SetxattrRequest) (*SetxattrResponse, error)
	Listxattr(context.Context, *ListxattrRequest) (*ListxattrResponse, error)
	Removexattr(context.Context, *RemovexattrRequest) (*RemovexattrResponse, error)
	Rename(context.Context, *RenameRequest) (*RenameResponse, error)
	Statfs(context.Context, *StatfsRequest) (*StatfsResponse, error)
	InitFs(context.Context, *InitFsRequest) (*InitFsResponse, error)
}

func RegisterApiServer(s *grpc.Server, srv ApiServer) {
	s.RegisterService(&_Api_serviceDesc, srv)
}

func _Api_SetAttr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAttrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).SetAttr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/SetAttr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).SetAttr(ctx, req.(*SetAttrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_GetAttr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAttrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).GetAttr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/GetAttr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).GetAttr(ctx, req.(*GetAttrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Write(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_MkDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MkDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).MkDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/MkDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).MkDir(ctx, req.(*MkDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Lookup(ctx, req.(*LookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_ReadDirAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadDirAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).ReadDirAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/ReadDirAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).ReadDirAll(ctx, req.(*ReadDirAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Symlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SymlinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Symlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Symlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Symlink(ctx, req.(*SymlinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Readlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadlinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Readlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Readlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Readlink(ctx, req.(*ReadlinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Getxattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetxattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Getxattr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Getxattr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Getxattr(ctx, req.(*GetxattrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Setxattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetxattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Setxattr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Setxattr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Setxattr(ctx, req.(*SetxattrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Listxattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListxattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Listxattr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Listxattr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Listxattr(ctx, req.(*ListxattrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Removexattr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovexattrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Removexattr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Removexattr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Removexattr(ctx, req.(*RemovexattrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Rename(ctx, req.(*RenameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_Statfs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatfsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).Statfs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/Statfs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).Statfs(ctx, req.(*StatfsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Api_InitFs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitFsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServer).InitFs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Api/InitFs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServer).InitFs(ctx, req.(*InitFsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Api_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Api",
	HandlerType: (*ApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetAttr",
			Handler:    _Api_SetAttr_Handler,
		},
		{
			MethodName: "GetAttr",
			Handler:    _Api_GetAttr_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _Api_Read_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _Api_Write_Handler,
		},
		{
			MethodName: "MkDir",
			Handler:    _Api_MkDir_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Api_Create_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _Api_Remove_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _Api_Lookup_Handler,
		},
		{
			MethodName: "ReadDirAll",
			Handler:    _Api_ReadDirAll_Handler,
		},
		{
			MethodName: "Symlink",
			Handler:    _Api_Symlink_Handler,
		},
		{
			MethodName: "Readlink",
			Handler:    _Api_Readlink_Handler,
		},
		{
			MethodName: "Getxattr",
			Handler:    _Api_Getxattr_Handler,
		},
		{
			MethodName: "Setxattr",
			Handler:    _Api_Setxattr_Handler,
		},
		{
			MethodName: "Listxattr",
			Handler:    _Api_Listxattr_Handler,
		},
		{
			MethodName: "Removexattr",
			Handler:    _Api_Removexattr_Handler,
		},
		{
			MethodName: "Rename",
			Handler:    _Api_Rename_Handler,
		},
		{
			MethodName: "Statfs",
			Handler:    _Api_Statfs_Handler,
		},
		{
			MethodName: "InitFs",
			Handler:    _Api_InitFs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

// Client API for FileSystemAPI service

type FileSystemAPIClient interface {
	CreateFS(ctx context.Context, in *CreateFSRequest, opts ...grpc.CallOption) (*CreateFSResponse, error)
	ListFS(ctx context.Context, in *ListFSRequest, opts ...grpc.CallOption) (*ListFSResponse, error)
	ShowFS(ctx context.Context, in *ShowFSRequest, opts ...grpc.CallOption) (*ShowFSResponse, error)
	DeleteFS(ctx context.Context, in *DeleteFSRequest, opts ...grpc.CallOption) (*DeleteFSResponse, error)
	UpdateFS(ctx context.Context, in *UpdateFSRequest, opts ...grpc.CallOption) (*UpdateFSResponse, error)
	GrantAddrFS(ctx context.Context, in *GrantAddrFSRequest, opts ...grpc.CallOption) (*GrantAddrFSResponse, error)
	RevokeAddrFS(ctx context.Context, in *RevokeAddrFSRequest, opts ...grpc.CallOption) (*RevokeAddrFSResponse, error)
}

type fileSystemAPIClient struct {
	cc *grpc.ClientConn
}

func NewFileSystemAPIClient(cc *grpc.ClientConn) FileSystemAPIClient {
	return &fileSystemAPIClient{cc}
}

func (c *fileSystemAPIClient) CreateFS(ctx context.Context, in *CreateFSRequest, opts ...grpc.CallOption) (*CreateFSResponse, error) {
	out := new(CreateFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/CreateFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) ListFS(ctx context.Context, in *ListFSRequest, opts ...grpc.CallOption) (*ListFSResponse, error) {
	out := new(ListFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/ListFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) ShowFS(ctx context.Context, in *ShowFSRequest, opts ...grpc.CallOption) (*ShowFSResponse, error) {
	out := new(ShowFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/ShowFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) DeleteFS(ctx context.Context, in *DeleteFSRequest, opts ...grpc.CallOption) (*DeleteFSResponse, error) {
	out := new(DeleteFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/DeleteFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) UpdateFS(ctx context.Context, in *UpdateFSRequest, opts ...grpc.CallOption) (*UpdateFSResponse, error) {
	out := new(UpdateFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/UpdateFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) GrantAddrFS(ctx context.Context, in *GrantAddrFSRequest, opts ...grpc.CallOption) (*GrantAddrFSResponse, error) {
	out := new(GrantAddrFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/GrantAddrFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemAPIClient) RevokeAddrFS(ctx context.Context, in *RevokeAddrFSRequest, opts ...grpc.CallOption) (*RevokeAddrFSResponse, error) {
	out := new(RevokeAddrFSResponse)
	err := grpc.Invoke(ctx, "/proto.FileSystemAPI/RevokeAddrFS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FileSystemAPI service

type FileSystemAPIServer interface {
	CreateFS(context.Context, *CreateFSRequest) (*CreateFSResponse, error)
	ListFS(context.Context, *ListFSRequest) (*ListFSResponse, error)
	ShowFS(context.Context, *ShowFSRequest) (*ShowFSResponse, error)
	DeleteFS(context.Context, *DeleteFSRequest) (*DeleteFSResponse, error)
	UpdateFS(context.Context, *UpdateFSRequest) (*UpdateFSResponse, error)
	GrantAddrFS(context.Context, *GrantAddrFSRequest) (*GrantAddrFSResponse, error)
	RevokeAddrFS(context.Context, *RevokeAddrFSRequest) (*RevokeAddrFSResponse, error)
}

func RegisterFileSystemAPIServer(s *grpc.Server, srv FileSystemAPIServer) {
	s.RegisterService(&_FileSystemAPI_serviceDesc, srv)
}

func _FileSystemAPI_CreateFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).CreateFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/CreateFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).CreateFS(ctx, req.(*CreateFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_ListFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).ListFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/ListFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).ListFS(ctx, req.(*ListFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_ShowFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).ShowFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/ShowFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).ShowFS(ctx, req.(*ShowFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_DeleteFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).DeleteFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/DeleteFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).DeleteFS(ctx, req.(*DeleteFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_UpdateFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).UpdateFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/UpdateFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).UpdateFS(ctx, req.(*UpdateFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_GrantAddrFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantAddrFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).GrantAddrFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/GrantAddrFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).GrantAddrFS(ctx, req.(*GrantAddrFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemAPI_RevokeAddrFS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeAddrFSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemAPIServer).RevokeAddrFS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FileSystemAPI/RevokeAddrFS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemAPIServer).RevokeAddrFS(ctx, req.(*RevokeAddrFSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileSystemAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FileSystemAPI",
	HandlerType: (*FileSystemAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFS",
			Handler:    _FileSystemAPI_CreateFS_Handler,
		},
		{
			MethodName: "ListFS",
			Handler:    _FileSystemAPI_ListFS_Handler,
		},
		{
			MethodName: "ShowFS",
			Handler:    _FileSystemAPI_ShowFS_Handler,
		},
		{
			MethodName: "DeleteFS",
			Handler:    _FileSystemAPI_DeleteFS_Handler,
		},
		{
			MethodName: "UpdateFS",
			Handler:    _FileSystemAPI_UpdateFS_Handler,
		},
		{
			MethodName: "GrantAddrFS",
			Handler:    _FileSystemAPI_GrantAddrFS_Handler,
		},
		{
			MethodName: "RevokeAddrFS",
			Handler:    _FileSystemAPI_RevokeAddrFS_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto1.RegisterFile("formic_api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1713 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x58, 0x5b, 0x6f, 0x1b, 0xd5,
	0x13, 0xaf, 0x2f, 0x9b, 0xd8, 0x93, 0x38, 0xf1, 0x7f, 0x7b, 0xf9, 0xbb, 0xa6, 0x12, 0x68, 0x05,
	0x6d, 0xa9, 0x44, 0x24, 0x52, 0x24, 0x4a, 0x2b, 0x0a, 0x21, 0x69, 0x4c, 0xa4, 0xb6, 0x54, 0xbb,
	0x2d, 0x54, 0x02, 0x81, 0x36, 0xf1, 0xba, 0x5d, 0xf9, 0xb2, 0xee, 0xee, 0x3a, 0xad, 0x79, 0xe1,
	0x81, 0x57, 0x5e, 0xf8, 0x3a, 0x7c, 0x04, 0xde, 0x78, 0xe3, 0xe3, 0x30, 0x73, 0xee, 0x67, 0xed,
	0xd8, 0xd4, 0xad, 0x78, 0xf2, 0xce, 0x9c, 0xf3, 0x9b, 0x99, 0x33, 0x67, 0xce, 0x5c, 0x0c, 0xcd,
	0x5e, 0x92, 0x0e, 0xe3, 0x93, 0x9f, 0xc2, 0x71, 0xbc, 0x33, 0x4e, 0x93, 0x3c, 0x71, 0x1d, 0xf6,
	0xe3, 0x7d, 0x0d, 0x6b, 0x07, 0x71, 0x7a, 0x6f, 0x94, 0xbb, 0x2e, 0x54, 0x47, 0xe1, 0x30, 0x6a,
	0x95, 0xde, 0x2b, 0x5d, 0xaf, 0xfb, 0xec, 0xdb, 0xbd, 0x04, 0x6b, 0xe3, 0x30, 0x8d, 0x46, 0x79,
	0xab, 0x8c, 0xdc, 0xaa, 0x2f, 0x28, 0xda, 0x9b, 0x4f, 0xc7, 0x51, 0xab, 0x82, 0xdc, 0x86, 0xcf,
	0xbe, 0xbd, 0x3b, 0x00, 0x5c, 0x52, 0x1a, 0x47, 0x99, 0xfb, 0x91, 0x49, 0xa1, 0xcc, 0xca, 0xf5,
	0x8d, 0xdd, 0x06, 0x57, 0xbd, 0xc3, 0x17, 0x7c, 0xe8, 0xaa, 0x0d, 0xde, 0xdf, 0x25, 0xa8, 0xee,
	0xe5, 0x79, 0xea, 0x5e, 0x00, 0x27, 0x1e, 0x25, 0x5d, 0x6e, 0x46, 0xd5, 0xe7, 0x04, 0x71, 0xc3,
	0x3c, 0x46, 0xe3, 0xc8, 0x8c, 0x8a, 0xcf, 0x09, 0xe2, 0x0e, 0x19, 0xb7, 0xc2, 0xb9, 0x43, 0xc9,
	0x3d, 0x61, 0xdc, 0x2a, 0xe7, 0x32, 0x82, 0x4e, 0x72, 0x92, 0x32, 0xb6, 0xc3, 0xd8, 0x82, 0xa2,
	0x93, 0x0c, 0x49, 0xdd, 0x1a, 0x3f, 0xc9, 0x50, 0x68, 0x3b, 0x0d, 0x07, 0x71, 0xb7, 0xb5, 0x8e,
	0x4c, 0xc7, 0xe7, 0x04, 0xed, 0xcc, 0xe2, 0x9f, 0xa3, 0x56, 0x8d, 0x19, 0xc6, 0xbe, 0xdd, 0x26,
	0x54, 0x26, 0xb8, 0xaf, 0xce, 0xc0, 0xf4, 0x49, 0x9c, 0x67, 0xc8, 0x01, 0xce, 0xc1, 0x4f, 0xaf,
	0x03, 0x5b, 0x41, 0x94, 0xd3, 0xe1, 0xfc, 0xe8, 0xc5, 0x24, 0xca, 0x72, 0xf7, 0x5d, 0xa8, 0x86,
	0x48, 0xb2, 0x23, 0x6e, 0xec, 0x6e, 0x08, 0xaf, 0xb0, 0x1d, 0x6c, 0x41, 0x1b, 0x50, 0x66, 0x62,
	0x38, 0xe1, 0xed, 0xc2, 0xb6, 0x12, 0x94, 0x8d, 0x93, 0x51, 0x16, 0x2d, 0x95, 0xe4, 0x5d, 0x85,
	0xad, 0x8e, 0xad, 0x7c, 0xae, 0x83, 0x49, 0x76, 0xe7, 0x75, 0x65, 0x7f, 0x03, 0x1b, 0x7e, 0x14,
	0x76, 0x17, 0x0a, 0x26, 0xbf, 0x27, 0xbd, 0x5e, 0x16, 0xe5, 0xe2, 0xea, 0x04, 0xa5, 0xbc, 0xc9,
	0xaf, 0x8e, 0x7d, 0x7b, 0x77, 0x61, 0x93, 0x0b, 0x14, 0x16, 0xcc, 0x97, 0xd8, 0x82, 0xf5, 0x71,
	0x38, 0x1d, 0x24, 0x21, 0x77, 0xcf, 0xa6, 0x2f, 0x49, 0xef, 0x5b, 0xd8, 0xfc, 0x2e, 0x8d, 0xf3,
	0x68, 0x35, 0x8b, 0x0c, 0xb9, 0x15, 0x5b, 0xee, 0x35, 0x68, 0x08, 0xb9, 0xc2, 0x30, 0x14, 0x91,
	0xe5, 0x61, 0x3e, 0xc9, 0x98, 0x64, 0xc7, 0x17, 0x94, 0xf7, 0x3d, 0x6c, 0x3e, 0xe8, 0x63, 0x74,
	0x4b, 0x03, 0xf4, 0xf3, 0x29, 0x15, 0x9f, 0x0f, 0x7b, 0x6a, 0x65, 0xe3, 0xa9, 0x49, 0x77, 0x57,
	0xce, 0x72, 0xf7, 0x01, 0x34, 0x84, 0x70, 0x61, 0xc5, 0xbc, 0x07, 0x2b, 0xa5, 0x94, 0xcf, 0x92,
	0xf2, 0x03, 0x34, 0xf6, 0xd3, 0x28, 0xd4, 0x4e, 0x7a, 0xab, 0x36, 0xde, 0x83, 0x2d, 0x29, 0xfd,
	0x4d, 0x8c, 0xbc, 0x03, 0x0d, 0x3f, 0x1a, 0x26, 0xa7, 0xab, 0x18, 0xe9, 0x5d, 0x87, 0x2d, 0x09,
	0x5e, 0x72, 0x5d, 0xa8, 0xe6, 0x7e, 0x92, 0xf4, 0x27, 0xe3, 0x55, 0xd4, 0xe0, 0x51, 0x25, 0xf8,
	0x4d, 0x8e, 0xfa, 0x21, 0xfc, 0x8f, 0x62, 0x1e, 0xef, 0x75, 0x6f, 0x30, 0x58, 0xfc, 0x46, 0xf7,
	0xc1, 0x35, 0xb7, 0x0a, 0xad, 0xaf, 0x99, 0x68, 0x5f, 0x61, 0x36, 0x9a, 0x0e, 0x07, 0xf1, 0xa8,
	0xbf, 0x4a, 0x00, 0xe0, 0xde, 0x3c, 0x4c, 0x9f, 0xe1, 0xdb, 0xa9, 0x30, 0xae, 0xa0, 0x64, 0x1e,
	0xac, 0xce, 0xe4, 0x41, 0x47, 0xe7, 0xc1, 0x1f, 0x31, 0x7d, 0x49, 0xcd, 0xfa, 0x62, 0xde, 0x5e,
	0xec, 0x5d, 0x83, 0x6d, 0x72, 0x8f, 0x79, 0xb4, 0xf9, 0x7e, 0xbc, 0x01, 0x4d, 0xbd, 0x51, 0x5b,
	0x22, 0x0e, 0x56, 0x32, 0x0f, 0xe6, 0xf5, 0x59, 0x5e, 0x7c, 0x15, 0x2e, 0x4b, 0xa0, 0x73, 0x4d,
	0x36, 0x73, 0x5c, 0x43, 0x54, 0x8c, 0x36, 0xd4, 0xc6, 0x49, 0x16, 0xe7, 0x71, 0x32, 0x12, 0xee,
	0x52, 0x34, 0x46, 0x6e, 0x53, 0x2b, 0xd3, 0x39, 0xf0, 0x95, 0x4a, 0xc3, 0x9b, 0x3e, 0x27, 0xbc,
	0x5f, 0x4b, 0xac, 0x16, 0xac, 0x68, 0x17, 0x2f, 0x2f, 0x93, 0x48, 0xe4, 0x39, 0x4e, 0x2c, 0xb2,
	0x8c, 0x10, 0xbd, 0x41, 0xf8, 0x2c, 0x13, 0xf7, 0xc9, 0x09, 0xcf, 0x85, 0x66, 0x50, 0xb0, 0xd7,
	0x7b, 0x0a, 0xcd, 0xfb, 0x71, 0xf6, 0x2f, 0x2d, 0x63, 0xde, 0x29, 0x9f, 0xe1, 0x9d, 0x4a, 0xc1,
	0x3b, 0xf8, 0x52, 0x0c, 0xc9, 0x0b, 0xdd, 0x73, 0x97, 0x5e, 0x0a, 0xa5, 0x80, 0xd5, 0x1c, 0xe4,
	0x5d, 0x84, 0xf3, 0x16, 0x5e, 0x9c, 0xed, 0x17, 0x4a, 0x4b, 0xb4, 0x41, 0x4a, 0xbc, 0x02, 0xf5,
	0x64, 0xd0, 0x7d, 0x64, 0x86, 0xb0, 0x66, 0xd0, 0xea, 0x28, 0x7a, 0xf9, 0xc8, 0xec, 0x9f, 0x34,
	0x83, 0xca, 0x0d, 0x6e, 0x7d, 0x18, 0x8a, 0xf6, 0xa5, 0xee, 0x4b, 0x92, 0x56, 0x70, 0x1b, 0x5b,
	0xa9, 0xf2, 0x15, 0x41, 0x7a, 0x4d, 0x4a, 0x6d, 0xdc, 0x00, 0x61, 0xd2, 0x36, 0x34, 0x02, 0x4c,
	0x66, 0xbd, 0x4c, 0x98, 0xe4, 0xfd, 0x59, 0xc2, 0x07, 0x2e, 0x38, 0x3a, 0xb6, 0x8f, 0x07, 0xc9,
	0x49, 0x3f, 0x93, 0xaf, 0x8c, 0x53, 0xe4, 0x8f, 0xe3, 0x5e, 0x1a, 0x45, 0xc2, 0x36, 0x4e, 0xb0,
	0xdd, 0xe1, 0x69, 0x18, 0x0f, 0x98, 0x59, 0xb4, 0x9b, 0x51, 0x2c, 0x04, 0xe2, 0x01, 0xa6, 0x98,
	0x2a, 0xdf, 0xcd, 0x08, 0xc6, 0x65, 0x32, 0x1c, 0xc1, 0x65, 0x32, 0x48, 0x32, 0xbb, 0x5b, 0xde,
	0x55, 0x71, 0x82, 0x9d, 0x0b, 0x6d, 0x1f, 0x44, 0x23, 0xd6, 0x58, 0x35, 0x7c, 0x49, 0x92, 0xce,
	0x5e, 0xaa, 0x9a, 0xab, 0x86, 0x2f, 0x28, 0x3a, 0xdd, 0xd1, 0x28, 0xce, 0x0f, 0xd5, 0xe9, 0xd0,
	0x01, 0x92, 0x21, 0x1c, 0xf0, 0x7b, 0x05, 0xe0, 0x88, 0x2e, 0x92, 0x12, 0xdc, 0x94, 0x74, 0x9c,
	0x46, 0x08, 0xc6, 0xf8, 0x29, 0x71, 0x1d, 0x82, 0x64, 0xb7, 0x9f, 0x61, 0x42, 0x64, 0xa7, 0xad,
	0xf9, 0x9c, 0x58, 0x9a, 0x55, 0x8c, 0x14, 0x55, 0xb5, 0x52, 0x94, 0x0a, 0x26, 0xc7, 0x0c, 0x26,
	0xba, 0x72, 0xfc, 0xdd, 0x4f, 0x26, 0x08, 0x58, 0x13, 0x57, 0x2e, 0x19, 0x24, 0x2b, 0xce, 0xee,
	0x63, 0xda, 0x61, 0xe7, 0xaf, 0xf9, 0x82, 0x32, 0x92, 0x4f, 0xcd, 0xca, 0xaa, 0xbb, 0x32, 0xb8,
	0xeb, 0x2c, 0xab, 0x5f, 0x11, 0xd6, 0xe9, 0xe3, 0xee, 0x3c, 0xa5, 0x65, 0xf6, 0x29, 0x42, 0xdf,
	0xb8, 0x6c, 0xb0, 0x2e, 0x1b, 0x2d, 0x63, 0x5f, 0x01, 0x79, 0x79, 0x83, 0x5b, 0xa6, 0x18, 0xf4,
	0x08, 0x7a, 0xd9, 0x51, 0xb7, 0xd5, 0x60, 0xaf, 0x88, 0x7d, 0xb7, 0x6f, 0x01, 0x68, 0xf1, 0x94,
	0xcf, 0xfb, 0xd1, 0x54, 0x64, 0x47, 0xfa, 0xd4, 0x59, 0xa4, 0x6c, 0x64, 0x91, 0xdb, 0xe5, 0x5b,
	0x25, 0x6f, 0x0a, 0xf5, 0xc7, 0xc9, 0xf0, 0x38, 0xcb, 0x93, 0x11, 0x8b, 0x85, 0x2e, 0xeb, 0xbb,
	0x4b, 0xbc, 0x1d, 0xef, 0xca, 0x26, 0xfd, 0x85, 0xd9, 0xd0, 0xbf, 0x90, 0xcd, 0x38, 0x33, 0xa3,
	0xa2, 0xcd, 0xd0, 0x8e, 0xae, 0x16, 0x9a, 0x38, 0x71, 0x4c, 0xc7, 0x3c, 0xa6, 0x37, 0x01, 0x07,
	0xaf, 0x35, 0x9f, 0xfe, 0xc7, 0x6a, 0x7f, 0x2b, 0x41, 0x4d, 0x54, 0xe1, 0x45, 0x31, 0x38, 0x2f,
	0x19, 0x6f, 0x41, 0x39, 0x96, 0xaa, 0xf1, 0xcb, 0xdd, 0x81, 0x7a, 0x2e, 0x9d, 0xc7, 0x94, 0x6f,
	0xec, 0x36, 0xc5, 0xc5, 0x2b, 0xa7, 0xfa, 0x7a, 0x8b, 0x1a, 0xc5, 0x1c, 0x63, 0x14, 0x7b, 0x02,
	0xf5, 0x43, 0x7c, 0x9e, 0x5f, 0x91, 0x71, 0x8b, 0xcd, 0xe9, 0x86, 0x79, 0x28, 0x2e, 0x90, 0x7d,
	0x53, 0x06, 0x3e, 0x79, 0x1e, 0xe1, 0x99, 0x26, 0x43, 0x99, 0x81, 0x25, 0xed, 0xdd, 0x04, 0xe7,
	0x41, 0xd2, 0x3d, 0x0c, 0x08, 0xf8, 0x70, 0xce, 0xa8, 0x18, 0xf0, 0x26, 0x8b, 0x9f, 0x4e, 0x36,
	0x59, 0x5f, 0xc0, 0x36, 0x6f, 0x09, 0x0f, 0x03, 0x23, 0x11, 0x3f, 0x4e, 0xfa, 0xd1, 0x48, 0xe0,
	0x9d, 0x9c, 0x08, 0x12, 0x70, 0x18, 0x3c, 0xd4, 0xee, 0x59, 0xeb, 0x31, 0x0a, 0x47, 0x98, 0xa6,
	0x16, 0xa0, 0x5b, 0xad, 0x03, 0xb2, 0x5c, 0x18, 0x40, 0x96, 0x7b, 0x1f, 0x60, 0x37, 0x87, 0xf5,
	0x61, 0x89, 0x1a, 0xef, 0x7d, 0xec, 0xdb, 0xc4, 0xb6, 0x05, 0xc2, 0x3e, 0xc3, 0xbc, 0xfa, 0x3c,
	0x79, 0xb9, 0xcc, 0x66, 0x84, 0x1e, 0x06, 0x62, 0x4e, 0x43, 0x68, 0x0f, 0xbf, 0x49, 0x81, 0x84,
	0x2e, 0x50, 0x70, 0x07, 0xb6, 0x0f, 0x30, 0xf7, 0x2d, 0x77, 0xcb, 0x3c, 0x15, 0xe8, 0x12, 0x0d,
	0x5e, 0xa0, 0xe4, 0x04, 0xb6, 0x9f, 0x8c, 0xbb, 0xe1, 0x4a, 0x4a, 0xdc, 0xab, 0xb0, 0x4e, 0x41,
	0x94, 0x4d, 0x33, 0x91, 0x1d, 0x37, 0x45, 0x18, 0xb2, 0x18, 0xf0, 0xd7, 0x7b, 0x7c, 0x91, 0x8c,
	0xd1, 0x4a, 0x16, 0x18, 0xe3, 0x83, 0xdb, 0x49, 0xc3, 0x51, 0xbe, 0xd7, 0xed, 0xa6, 0xab, 0xd8,
	0x83, 0x3c, 0x82, 0x8a, 0x6a, 0x59, 0x0d, 0xf1, 0x1b, 0x7b, 0x82, 0xf3, 0x96, 0xcc, 0x05, 0xea,
	0x03, 0xaa, 0xe9, 0xa7, 0x28, 0xfd, 0x6d, 0xea, 0xbf, 0x01, 0x17, 0x6c, 0xa1, 0x67, 0x1b, 0xb0,
	0xfb, 0x47, 0x0d, 0x2a, 0x7b, 0xe3, 0xd8, 0xbd, 0x0d, 0xeb, 0x62, 0x8c, 0x77, 0x2f, 0x0a, 0x8f,
	0xda, 0xff, 0x0f, 0xb4, 0x2f, 0x15, 0xd9, 0xa2, 0xd6, 0x9d, 0x23, 0x6c, 0xa7, 0x80, 0xed, 0xcc,
	0xc7, 0x76, 0x66, 0xb0, 0x1f, 0x43, 0x95, 0xda, 0x5e, 0xd7, 0x15, 0x3b, 0x8c, 0xd9, 0xbd, 0x7d,
	0xde, 0xe2, 0x29, 0xc8, 0x27, 0xe0, 0xb0, 0xc1, 0xd7, 0x95, 0xeb, 0xe6, 0x78, 0xdd, 0xbe, 0x60,
	0x33, 0x4d, 0x14, 0x1b, 0x54, 0x15, 0xca, 0x9c, 0x89, 0x15, 0xca, 0x9a, 0x65, 0x11, 0xf5, 0x29,
	0xac, 0xf1, 0x67, 0xee, 0xca, 0x1d, 0xd6, 0x9c, 0xda, 0xbe, 0x58, 0xe0, 0x9a, 0x40, 0xde, 0xac,
	0x29, 0xa0, 0x35, 0x3b, 0x2a, 0xa0, 0x3d, 0x14, 0x72, 0x20, 0x9f, 0xe0, 0x14, 0xd0, 0x9a, 0x06,
	0x15, 0xd0, 0x1e, 0xf3, 0x10, 0xb8, 0x0f, 0xa0, 0x07, 0x31, 0xb7, 0x65, 0xf8, 0xce, 0x1a, 0xe3,
	0xda, 0x97, 0xe7, 0xac, 0x98, 0x57, 0x29, 0xc6, 0x21, 0x1d, 0x06, 0xd6, 0x60, 0xa6, 0xc3, 0xc0,
	0x9e, 0x9a, 0x10, 0xfb, 0x39, 0xd4, 0xe4, 0x04, 0xe3, 0x5e, 0x32, 0x94, 0x98, 0xe8, 0xff, 0xcf,
	0xf0, 0x4d, 0xb8, 0x9c, 0x33, 0x5c, 0x23, 0x5e, 0xcc, 0x66, 0x59, 0xc1, 0x8b, 0x03, 0x09, 0x87,
	0x07, 0x45, 0x78, 0x70, 0x06, 0x3c, 0x98, 0x85, 0x7f, 0x09, 0x75, 0xd5, 0xc7, 0xbb, 0x72, 0x5f,
	0x71, 0x66, 0x68, 0xb7, 0x66, 0x17, 0x94, 0x84, 0x43, 0xfa, 0xe3, 0x49, 0xb5, 0xe7, 0xee, 0x65,
	0xeb, 0x82, 0x2d, 0x29, 0xed, 0x79, 0x4b, 0x76, 0xe4, 0xf0, 0x89, 0x48, 0xed, 0x33, 0xda, 0x7b,
	0x23, 0x72, 0xac, 0x9e, 0x9b, 0x01, 0x79, 0x8f, 0xad, 0x80, 0x56, 0x13, 0xae, 0x80, 0x76, 0x23,
	0xce, 0x81, 0xbc, 0x7f, 0x55, 0x40, 0xab, 0xbf, 0x55, 0xc0, 0x42, 0x93, 0x7b, 0x6e, 0xf7, 0xaf,
	0x0a, 0x34, 0x28, 0x1b, 0x07, 0xd3, 0x2c, 0x8f, 0x86, 0x7b, 0x8f, 0x8e, 0xe8, 0x16, 0x64, 0x59,
	0x54, 0xb7, 0x50, 0x28, 0xb4, 0xea, 0x16, 0x8a, 0xf5, 0x53, 0x04, 0x3f, 0x2b, 0x83, 0x3a, 0xf8,
	0xcd, 0xe2, 0xa9, 0x83, 0xdf, 0xaa, 0x95, 0xe2, 0xec, 0xac, 0xbc, 0xe9, 0xb3, 0x9b, 0x85, 0x52,
	0x9f, 0xdd, 0xaa, 0x81, 0x3c, 0x6c, 0x64, 0xd1, 0x52, 0x06, 0x17, 0x4a, 0xa0, 0x32, 0xb8, 0x58,
	0xdd, 0x38, 0x5c, 0x96, 0x19, 0x05, 0x2f, 0x14, 0x37, 0x05, 0x2f, 0xd6, 0x23, 0x1e, 0x33, 0x46,
	0xa5, 0x50, 0x31, 0x33, 0x5b, 0x91, 0x54, 0xcc, 0xcc, 0x29, 0x2c, 0x28, 0xe7, 0x88, 0xfe, 0xa3,
	0xd4, 0x19, 0xdf, 0xd5, 0x11, 0x36, 0x53, 0x5b, 0xda, 0xef, 0xcc, 0x5d, 0x93, 0xa2, 0x8e, 0xd7,
	0xd8, 0xea, 0xcd, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xe6, 0xca, 0x81, 0x9c, 0x17, 0x00,
	0x00,
}
