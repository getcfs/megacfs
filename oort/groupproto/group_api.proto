syntax = "proto3";
package groupproto;

service GroupStore {
    rpc Delete(stream DeleteRequest) returns (stream DeleteResponse) {}
    rpc LookupGroup(stream LookupGroupRequest) returns (stream LookupGroupResponse) {}
    rpc Lookup(stream LookupRequest) returns (stream LookupResponse) {}
    rpc ReadGroup(stream ReadGroupRequest) returns (stream ReadGroupResponse) {}
    rpc Read(stream ReadRequest) returns (stream ReadResponse) {}
    rpc Write(stream WriteRequest) returns (stream WriteResponse) {}
}


message DeleteRequest {
    uint32 RPCID          = 1;
    uint64 KeyA           = 2;
    uint64 KeyB           = 3;
    uint64 ChildKeyA      = 4;
    uint64 ChildKeyB      = 5;
    int64  TimestampMicro = 6;
}

message DeleteResponse {
    uint32 RPCID          = 1;
    int64  TimestampMicro = 2;
    string Err            = 3;
}


message LookupGroupRequest {
    uint32 RPCID = 1;
    uint64 KeyA  = 2;
    uint64 KeyB  = 3;
}

message LookupGroupResponse {
    uint32                   RPCID = 1;
    repeated LookupGroupItem Items = 2;
    string                   Err   = 3;
}

message LookupGroupItem {
    uint32 RPCID          = 1;
    uint64 ChildKeyA      = 2;
    uint64 ChildKeyB      = 3;
    int64  TimestampMicro = 4;
    uint32 Length         = 5;
}


message LookupRequest {
    uint32 RPCID     = 1;
    uint64 KeyA      = 2;
    uint64 KeyB      = 3;
    uint64 ChildKeyA = 4;
    uint64 ChildKeyB = 5;
}

message LookupResponse {
    uint32 RPCID          = 1;
    int64  TimestampMicro = 2;
    uint32 Length         = 3;
    string Err            = 4;
}


message ReadGroupRequest {
    uint32 RPCID = 1;
    uint64 KeyA  = 2;
    uint64 KeyB  = 3;
}

message ReadGroupResponse {
    uint32                 RPCID = 1;
    repeated ReadGroupItem Items = 2;
    string                 Err   = 3;
}

message ReadGroupItem {
    uint32 RPCID          = 1;
    uint64 ChildKeyA      = 2;
    uint64 ChildKeyB      = 3;
    int64  TimestampMicro = 4;
    bytes  Value          = 5;
}


message ReadRequest {
    uint32 RPCID     = 1;
    uint64 KeyA      = 2;
    uint64 KeyB      = 3;
    uint64 ChildKeyA = 4;
    uint64 ChildKeyB = 5;
}

message ReadResponse {
    uint32 RPCID          = 1;
    int64  TimestampMicro = 2;
    bytes  Value          = 3;
    string Err            = 4;
}


message WriteRequest {
    uint32 RPCID          = 1;
    uint64 KeyA           = 2;
    uint64 KeyB           = 3;
    uint64 ChildKeyA      = 4;
    uint64 ChildKeyB      = 5;
    bytes  Value          = 6;
    int64  TimestampMicro = 7;
}

message WriteResponse {
    uint32 RPCID          = 1;
    int64  TimestampMicro = 2;
    string Err            = 3;
}
