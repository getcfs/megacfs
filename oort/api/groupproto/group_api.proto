syntax = "proto3";
package groupproto;

service GroupStore {
    rpc Delete(stream DeleteRequest) returns (stream DeleteResponse) {}
    rpc LookupGroup(stream LookupGroupRequest) returns (stream LookupGroupResponse) {}
    rpc Lookup(stream LookupRequest) returns (stream LookupResponse) {}
    rpc ReadGroup(stream ReadGroupRequest) returns (stream ReadGroupResponse) {}
    rpc Read(stream ReadRequest) returns (stream ReadResponse) {}
    rpc Write(stream WriteRequest) returns (stream WriteResponse) {}
}


message DeleteRequest {
    uint32 rpcid = 1;
    uint64 keyA = 2;
    uint64 keyB = 3;
    uint64 childKeyA = 4;
    uint64 childKeyB = 5;
    int64  timestampMicro = 6;
}

message DeleteResponse {
    uint32 rpcid = 1;
    int64  timestampMicro = 2;
    string err = 3;
}


message LookupGroupRequest {
    uint32 rpcid = 1;
    uint64 keyA = 2;
    uint64 keyB = 3;
}

message LookupGroupResponse {
    uint32 rpcid = 1;
    repeated LookupGroupItem items = 2;
    string err = 3;
}

message LookupGroupItem {
    uint32 rpcid = 1;
    uint64 childKeyA = 2;
    uint64 childKeyB = 3;
    int64 timestampMicro = 4;
    uint32 length = 5;
}


message LookupRequest {
    uint32 rpcid = 1;
    uint64 keyA = 2;
    uint64 keyB = 3;
    uint64 childKeyA = 4;
    uint64 childKeyB = 5;
}

message LookupResponse {
    uint32 rpcid = 1;
    int64  timestampMicro = 2;
    uint32 length = 3;
    string err = 4;
}


message ReadGroupRequest {
    uint32 rpcid = 1;
    uint64 keyA = 2;
    uint64 keyB = 3;
}

message ReadGroupResponse {
    uint32 rpcid = 1;
    repeated ReadGroupItem items = 2;
    string err = 3;
}

message ReadGroupItem {
    uint32 rpcid = 1;
    uint64 childKeyA = 2;
    uint64 childKeyB = 3;
    int64 timestampMicro = 4;
    bytes value = 5;
}


message ReadRequest {
    uint32 rpcid = 1;
    uint64 keyA = 2;
    uint64 keyB = 3;
    uint64 childKeyA = 4;
    uint64 childKeyB = 5;
}

message ReadResponse {
    uint32 rpcid = 1;
    int64  timestampMicro = 2;
    bytes  value = 3;
    string err = 4;
}


message WriteRequest {
    uint32 rpcid = 1;
    uint64 keyA = 2;
    uint64 keyB = 3;
    uint64 childKeyA = 4;
    uint64 childKeyB = 5;
    bytes  value = 6;
    int64  timestampMicro = 7;
}

message WriteResponse {
    uint32 rpcid = 1;
    int64  timestampMicro = 2;
    string err = 3;
}
