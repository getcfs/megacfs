// Code generated by protoc-gen-go.
// source: value_api.proto
// DO NOT EDIT!

/*
Package valueproto is a generated protocol buffer package.

It is generated from these files:
	value_api.proto

It has these top-level messages:
	DeleteRequest
	DeleteResponse
	LookupRequest
	LookupResponse
	ReadRequest
	ReadResponse
	WriteRequest
	WriteResponse
*/
package valueproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeleteRequest struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	KeyA           uint64 `protobuf:"varint,2,opt,name=keyA" json:"keyA,omitempty"`
	KeyB           uint64 `protobuf:"varint,3,opt,name=keyB" json:"keyB,omitempty"`
	TimestampMicro int64  `protobuf:"varint,4,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DeleteRequest) GetRpcid() uint32 {
	if m != nil {
		return m.Rpcid
	}
	return 0
}

func (m *DeleteRequest) GetKeyA() uint64 {
	if m != nil {
		return m.KeyA
	}
	return 0
}

func (m *DeleteRequest) GetKeyB() uint64 {
	if m != nil {
		return m.KeyB
	}
	return 0
}

func (m *DeleteRequest) GetTimestampMicro() int64 {
	if m != nil {
		return m.TimestampMicro
	}
	return 0
}

type DeleteResponse struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	TimestampMicro int64  `protobuf:"varint,2,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
	Err            string `protobuf:"bytes,3,opt,name=err" json:"err,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeleteResponse) GetRpcid() uint32 {
	if m != nil {
		return m.Rpcid
	}
	return 0
}

func (m *DeleteResponse) GetTimestampMicro() int64 {
	if m != nil {
		return m.TimestampMicro
	}
	return 0
}

func (m *DeleteResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type LookupRequest struct {
	Rpcid uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	KeyA  uint64 `protobuf:"varint,2,opt,name=keyA" json:"keyA,omitempty"`
	KeyB  uint64 `protobuf:"varint,3,opt,name=keyB" json:"keyB,omitempty"`
}

func (m *LookupRequest) Reset()                    { *m = LookupRequest{} }
func (m *LookupRequest) String() string            { return proto.CompactTextString(m) }
func (*LookupRequest) ProtoMessage()               {}
func (*LookupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LookupRequest) GetRpcid() uint32 {
	if m != nil {
		return m.Rpcid
	}
	return 0
}

func (m *LookupRequest) GetKeyA() uint64 {
	if m != nil {
		return m.KeyA
	}
	return 0
}

func (m *LookupRequest) GetKeyB() uint64 {
	if m != nil {
		return m.KeyB
	}
	return 0
}

type LookupResponse struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	TimestampMicro int64  `protobuf:"varint,2,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
	Length         uint32 `protobuf:"varint,3,opt,name=length" json:"length,omitempty"`
	Err            string `protobuf:"bytes,4,opt,name=err" json:"err,omitempty"`
}

func (m *LookupResponse) Reset()                    { *m = LookupResponse{} }
func (m *LookupResponse) String() string            { return proto.CompactTextString(m) }
func (*LookupResponse) ProtoMessage()               {}
func (*LookupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LookupResponse) GetRpcid() uint32 {
	if m != nil {
		return m.Rpcid
	}
	return 0
}

func (m *LookupResponse) GetTimestampMicro() int64 {
	if m != nil {
		return m.TimestampMicro
	}
	return 0
}

func (m *LookupResponse) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *LookupResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type ReadRequest struct {
	Rpcid uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	KeyA  uint64 `protobuf:"varint,2,opt,name=keyA" json:"keyA,omitempty"`
	KeyB  uint64 `protobuf:"varint,3,opt,name=keyB" json:"keyB,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadRequest) GetRpcid() uint32 {
	if m != nil {
		return m.Rpcid
	}
	return 0
}

func (m *ReadRequest) GetKeyA() uint64 {
	if m != nil {
		return m.KeyA
	}
	return 0
}

func (m *ReadRequest) GetKeyB() uint64 {
	if m != nil {
		return m.KeyB
	}
	return 0
}

type ReadResponse struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	TimestampMicro int64  `protobuf:"varint,2,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
	Value          []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Err            string `protobuf:"bytes,4,opt,name=err" json:"err,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadResponse) GetRpcid() uint32 {
	if m != nil {
		return m.Rpcid
	}
	return 0
}

func (m *ReadResponse) GetTimestampMicro() int64 {
	if m != nil {
		return m.TimestampMicro
	}
	return 0
}

func (m *ReadResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ReadResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type WriteRequest struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	KeyA           uint64 `protobuf:"varint,2,opt,name=keyA" json:"keyA,omitempty"`
	KeyB           uint64 `protobuf:"varint,3,opt,name=keyB" json:"keyB,omitempty"`
	Value          []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	TimestampMicro int64  `protobuf:"varint,5,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
}

func (m *WriteRequest) Reset()                    { *m = WriteRequest{} }
func (m *WriteRequest) String() string            { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()               {}
func (*WriteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *WriteRequest) GetRpcid() uint32 {
	if m != nil {
		return m.Rpcid
	}
	return 0
}

func (m *WriteRequest) GetKeyA() uint64 {
	if m != nil {
		return m.KeyA
	}
	return 0
}

func (m *WriteRequest) GetKeyB() uint64 {
	if m != nil {
		return m.KeyB
	}
	return 0
}

func (m *WriteRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *WriteRequest) GetTimestampMicro() int64 {
	if m != nil {
		return m.TimestampMicro
	}
	return 0
}

type WriteResponse struct {
	Rpcid          uint32 `protobuf:"varint,1,opt,name=rpcid" json:"rpcid,omitempty"`
	TimestampMicro int64  `protobuf:"varint,2,opt,name=timestampMicro" json:"timestampMicro,omitempty"`
	Err            string `protobuf:"bytes,3,opt,name=err" json:"err,omitempty"`
}

func (m *WriteResponse) Reset()                    { *m = WriteResponse{} }
func (m *WriteResponse) String() string            { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()               {}
func (*WriteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *WriteResponse) GetRpcid() uint32 {
	if m != nil {
		return m.Rpcid
	}
	return 0
}

func (m *WriteResponse) GetTimestampMicro() int64 {
	if m != nil {
		return m.TimestampMicro
	}
	return 0
}

func (m *WriteResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*DeleteRequest)(nil), "valueproto.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "valueproto.DeleteResponse")
	proto.RegisterType((*LookupRequest)(nil), "valueproto.LookupRequest")
	proto.RegisterType((*LookupResponse)(nil), "valueproto.LookupResponse")
	proto.RegisterType((*ReadRequest)(nil), "valueproto.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "valueproto.ReadResponse")
	proto.RegisterType((*WriteRequest)(nil), "valueproto.WriteRequest")
	proto.RegisterType((*WriteResponse)(nil), "valueproto.WriteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ValueStore service

type ValueStoreClient interface {
	Delete(ctx context.Context, opts ...grpc.CallOption) (ValueStore_DeleteClient, error)
	Lookup(ctx context.Context, opts ...grpc.CallOption) (ValueStore_LookupClient, error)
	Read(ctx context.Context, opts ...grpc.CallOption) (ValueStore_ReadClient, error)
	Write(ctx context.Context, opts ...grpc.CallOption) (ValueStore_WriteClient, error)
}

type valueStoreClient struct {
	cc *grpc.ClientConn
}

func NewValueStoreClient(cc *grpc.ClientConn) ValueStoreClient {
	return &valueStoreClient{cc}
}

func (c *valueStoreClient) Delete(ctx context.Context, opts ...grpc.CallOption) (ValueStore_DeleteClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ValueStore_serviceDesc.Streams[0], c.cc, "/valueproto.ValueStore/Delete", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueStoreDeleteClient{stream}
	return x, nil
}

type ValueStore_DeleteClient interface {
	Send(*DeleteRequest) error
	Recv() (*DeleteResponse, error)
	grpc.ClientStream
}

type valueStoreDeleteClient struct {
	grpc.ClientStream
}

func (x *valueStoreDeleteClient) Send(m *DeleteRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *valueStoreDeleteClient) Recv() (*DeleteResponse, error) {
	m := new(DeleteResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *valueStoreClient) Lookup(ctx context.Context, opts ...grpc.CallOption) (ValueStore_LookupClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ValueStore_serviceDesc.Streams[1], c.cc, "/valueproto.ValueStore/Lookup", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueStoreLookupClient{stream}
	return x, nil
}

type ValueStore_LookupClient interface {
	Send(*LookupRequest) error
	Recv() (*LookupResponse, error)
	grpc.ClientStream
}

type valueStoreLookupClient struct {
	grpc.ClientStream
}

func (x *valueStoreLookupClient) Send(m *LookupRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *valueStoreLookupClient) Recv() (*LookupResponse, error) {
	m := new(LookupResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *valueStoreClient) Read(ctx context.Context, opts ...grpc.CallOption) (ValueStore_ReadClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ValueStore_serviceDesc.Streams[2], c.cc, "/valueproto.ValueStore/Read", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueStoreReadClient{stream}
	return x, nil
}

type ValueStore_ReadClient interface {
	Send(*ReadRequest) error
	Recv() (*ReadResponse, error)
	grpc.ClientStream
}

type valueStoreReadClient struct {
	grpc.ClientStream
}

func (x *valueStoreReadClient) Send(m *ReadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *valueStoreReadClient) Recv() (*ReadResponse, error) {
	m := new(ReadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *valueStoreClient) Write(ctx context.Context, opts ...grpc.CallOption) (ValueStore_WriteClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ValueStore_serviceDesc.Streams[3], c.cc, "/valueproto.ValueStore/Write", opts...)
	if err != nil {
		return nil, err
	}
	x := &valueStoreWriteClient{stream}
	return x, nil
}

type ValueStore_WriteClient interface {
	Send(*WriteRequest) error
	Recv() (*WriteResponse, error)
	grpc.ClientStream
}

type valueStoreWriteClient struct {
	grpc.ClientStream
}

func (x *valueStoreWriteClient) Send(m *WriteRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *valueStoreWriteClient) Recv() (*WriteResponse, error) {
	m := new(WriteResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for ValueStore service

type ValueStoreServer interface {
	Delete(ValueStore_DeleteServer) error
	Lookup(ValueStore_LookupServer) error
	Read(ValueStore_ReadServer) error
	Write(ValueStore_WriteServer) error
}

func RegisterValueStoreServer(s *grpc.Server, srv ValueStoreServer) {
	s.RegisterService(&_ValueStore_serviceDesc, srv)
}

func _ValueStore_Delete_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ValueStoreServer).Delete(&valueStoreDeleteServer{stream})
}

type ValueStore_DeleteServer interface {
	Send(*DeleteResponse) error
	Recv() (*DeleteRequest, error)
	grpc.ServerStream
}

type valueStoreDeleteServer struct {
	grpc.ServerStream
}

func (x *valueStoreDeleteServer) Send(m *DeleteResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *valueStoreDeleteServer) Recv() (*DeleteRequest, error) {
	m := new(DeleteRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ValueStore_Lookup_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ValueStoreServer).Lookup(&valueStoreLookupServer{stream})
}

type ValueStore_LookupServer interface {
	Send(*LookupResponse) error
	Recv() (*LookupRequest, error)
	grpc.ServerStream
}

type valueStoreLookupServer struct {
	grpc.ServerStream
}

func (x *valueStoreLookupServer) Send(m *LookupResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *valueStoreLookupServer) Recv() (*LookupRequest, error) {
	m := new(LookupRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ValueStore_Read_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ValueStoreServer).Read(&valueStoreReadServer{stream})
}

type ValueStore_ReadServer interface {
	Send(*ReadResponse) error
	Recv() (*ReadRequest, error)
	grpc.ServerStream
}

type valueStoreReadServer struct {
	grpc.ServerStream
}

func (x *valueStoreReadServer) Send(m *ReadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *valueStoreReadServer) Recv() (*ReadRequest, error) {
	m := new(ReadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ValueStore_Write_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ValueStoreServer).Write(&valueStoreWriteServer{stream})
}

type ValueStore_WriteServer interface {
	Send(*WriteResponse) error
	Recv() (*WriteRequest, error)
	grpc.ServerStream
}

type valueStoreWriteServer struct {
	grpc.ServerStream
}

func (x *valueStoreWriteServer) Send(m *WriteResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *valueStoreWriteServer) Recv() (*WriteRequest, error) {
	m := new(WriteRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ValueStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "valueproto.ValueStore",
	HandlerType: (*ValueStoreServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Delete",
			Handler:       _ValueStore_Delete_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Lookup",
			Handler:       _ValueStore_Lookup_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Read",
			Handler:       _ValueStore_Read_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Write",
			Handler:       _ValueStore_Write_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "value_api.proto",
}

func init() { proto.RegisterFile("value_api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 352 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0xcb, 0x4e, 0x83, 0x40,
	0x14, 0x75, 0x5a, 0x68, 0xe2, 0xb5, 0x54, 0x33, 0x69, 0x94, 0xb2, 0x6a, 0x58, 0x18, 0x56, 0x8d,
	0xd1, 0x0f, 0x30, 0x36, 0xba, 0xd2, 0x6e, 0xc6, 0x44, 0x97, 0x15, 0xdb, 0x1b, 0x25, 0x7d, 0xcc,
	0x38, 0x0c, 0x46, 0x7f, 0xc1, 0x9f, 0xf0, 0x57, 0x0d, 0x33, 0xb4, 0x65, 0x04, 0x77, 0xb8, 0xbb,
	0x8f, 0xc9, 0x79, 0xc0, 0xb9, 0x70, 0xf8, 0x1e, 0x2f, 0x33, 0x9c, 0xc6, 0x22, 0x19, 0x09, 0xc9,
	0x15, 0xa7, 0xa0, 0x07, 0xba, 0x0e, 0x33, 0xf0, 0xae, 0x71, 0x89, 0x0a, 0x19, 0xbe, 0x65, 0x98,
	0x2a, 0xda, 0x07, 0x57, 0x8a, 0x59, 0x32, 0xf7, 0xc9, 0x90, 0x44, 0x1e, 0x33, 0x0d, 0xa5, 0xe0,
	0x2c, 0xf0, 0xf3, 0xca, 0x6f, 0x0d, 0x49, 0xe4, 0x30, 0x5d, 0x17, 0xb3, 0xb1, 0xdf, 0xde, 0xce,
	0xc6, 0xf4, 0x14, 0x7a, 0x2a, 0x59, 0x61, 0xaa, 0xe2, 0x95, 0x98, 0x24, 0x33, 0xc9, 0x7d, 0x67,
	0x48, 0xa2, 0x36, 0xfb, 0x35, 0x0d, 0x9f, 0xa0, 0xb7, 0xa1, 0x4d, 0x05, 0x5f, 0xa7, 0xf8, 0x07,
	0x6f, 0x15, 0xaf, 0x55, 0x87, 0x47, 0x8f, 0xa0, 0x8d, 0x52, 0x6a, 0x29, 0xfb, 0x2c, 0x2f, 0xc3,
	0x09, 0x78, 0x77, 0x9c, 0x2f, 0x32, 0xd1, 0x88, 0xb1, 0xf0, 0x03, 0x7a, 0x1b, 0xb8, 0x46, 0x04,
	0x1f, 0x43, 0x67, 0x89, 0xeb, 0x17, 0xf5, 0xaa, 0x59, 0x3c, 0x56, 0x74, 0x1b, 0x23, 0xce, 0xce,
	0xc8, 0x2d, 0x1c, 0x30, 0x8c, 0xe7, 0xcd, 0xd8, 0x50, 0xd0, 0x35, 0x60, 0x8d, 0x98, 0xe8, 0x83,
	0xab, 0xa3, 0xa4, 0x29, 0xba, 0xcc, 0x34, 0x35, 0x16, 0xbe, 0x08, 0x74, 0x1f, 0x65, 0xd2, 0x54,
	0xc8, 0xb6, 0xb4, 0x4e, 0x99, 0xb6, 0x2a, 0xda, 0xad, 0x8d, 0xde, 0x14, 0xbc, 0x42, 0xcb, 0xff,
	0x24, 0xef, 0xfc, 0xbb, 0x05, 0xf0, 0x90, 0x4b, 0xba, 0x57, 0x5c, 0x22, 0xbd, 0x81, 0x8e, 0x89,
	0x3a, 0x1d, 0x8c, 0x76, 0x87, 0x37, 0xb2, 0xae, 0x2e, 0x08, 0xea, 0x56, 0x46, 0x5f, 0xb8, 0x17,
	0x91, 0x33, 0x92, 0xc3, 0x98, 0x00, 0xda, 0x30, 0x56, 0xc6, 0x6d, 0x18, 0x3b, 0xaf, 0x05, 0xcc,
	0x25, 0x38, 0x79, 0x00, 0xe8, 0x49, 0xf9, 0x65, 0x29, 0x5f, 0x81, 0x5f, 0x5d, 0x58, 0x00, 0x63,
	0x70, 0xf5, 0xe7, 0xa3, 0xd6, 0xc3, 0xf2, 0xdf, 0x0d, 0x06, 0x35, 0x9b, 0x32, 0xc6, 0x73, 0x47,
	0xaf, 0x2e, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x24, 0x49, 0x09, 0xe1, 0x9a, 0x04, 0x00, 0x00,
}
